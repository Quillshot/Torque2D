//--- OBJECT WRITE BEGIN ---
new ScriptObject(full_01MovementInput_Generic_moveStop_m) {
   canSaveDynamicFields = "1";
   class = "behaviorAtom";
      behaviorType = "01 - Generic Movements (Key/Joy/Con; Multibind)";
      description = "Stop translation and/or rotation.";
      details_atomName = "moveStop_m";
      details_category = "01 - Movement (Input)";
      details_eventAction = "full";
      details_subCategory = "Generic";
      friendlyName = "Stop Moving and/or Rotating (multi)";
      segmentbehaviorFields = "3";
      segmentbehaviorFields_0 = "   %behavior.addBehaviorField( \"Stop_Translations\",  \"Stop translations.\", bool, true );";
      segmentbehaviorFields_1 = "   %behavior.addBehaviorField( \"Stop_Rotations\",  \"Stop rotations.\", bool, true );";
      segmentbehaviorFields_2 = "   %behavior.addBehaviorField( \"Stop\",  \"Stop key\",  keybind, \"Keyboard space\" );   ";
      segmentkeepAll = "33";
      segmentkeepAll_0 = "function moveStop_m::onStop( %this , %val )";
      segmentkeepAll_1 = "{   ";
      segmentkeepAll_10 = "}";
      segmentkeepAll_11 = "function moveStop_m::doStop( %this )";
      segmentkeepAll_12 = "{   ";
      segmentkeepAll_13 = "   if(%this.Stop_Translations && %this.Stop_Rotations)";
      segmentkeepAll_14 = "   {";
      segmentkeepAll_15 = "      error(\"Stop Translations and Rotations\" );";
      segmentkeepAll_16 = "      %this.owner.setAtRest();";
      segmentkeepAll_17 = "   }   ";
      segmentkeepAll_18 = "   else if(%this.Stop_Translations)";
      segmentkeepAll_19 = "   {";
      segmentkeepAll_2 = "   error(\"moveStop_m::onStop( \", %val , \" ) \" );";
      segmentkeepAll_20 = "      error(\"Stop Translations\" );";
      segmentkeepAll_21 = "      %this.owner.setLinearVelocity(0,0);";
      segmentkeepAll_22 = "      //%this.owner.setConstantForcePolar( 0, 0 );";
      segmentkeepAll_23 = "      %this.owner.stopConstantForce(0,0);";
      segmentkeepAll_24 = "      %this.setPositionTargetOff();";
      segmentkeepAll_25 = "   }";
      segmentkeepAll_26 = "   else if(%this.Stop_Rotations)";
      segmentkeepAll_27 = "   {";
      segmentkeepAll_28 = "      error(\"Stop Rotations\" );";
      segmentkeepAll_29 = "      %this.setRotationTargetOff();";
      segmentkeepAll_3 = "   %this.doStop();";
      segmentkeepAll_30 = "      %this.setAngularVelocity( 0.0 );";
      segmentkeepAll_31 = "   }";
      segmentkeepAll_32 = "}";
      segmentkeepAll_4 = "}";
      segmentkeepAll_5 = "function moveStop_m::onJoystickStop( %this , %val )";
      segmentkeepAll_6 = "{   ";
      segmentkeepAll_7 = "   error(\"moveStop_m::onJoystickStop( \", %val , \" ) \" );";
      segmentkeepAll_8 = "   // Only downward/leftward strokes stop";
      segmentkeepAll_9 = "   if (%val > 0) %this.doStop();";
      segmentonAddToScene = "17";
      segmentonAddToScene_0 = "   // Note: Do not use a joystick for only one part of a Rotation pair. ";
      segmentonAddToScene_1 = "   // Ex: If you use joystick yaxis for up, use it for down too.";
      segmentonAddToScene_10 = "      moveMap.bindMulti( getWord( %this.Stop , 0 ), getWord( %this.Stop , 1 ), %this, \"onJoystickStop\" );";
      segmentonAddToScene_11 = "   }";
      segmentonAddToScene_12 = "  ";
      segmentonAddToScene_13 = "   %this.inputX = 0;";
      segmentonAddToScene_14 = "   %this.inputY = 0;";
      segmentonAddToScene_15 = "   %this.Stop = 0;";
      segmentonAddToScene_16 = "   %this.Clockwise = 0;";
      segmentonAddToScene_2 = "   if( strstr( getWord( %this.Stop , 1 ), \"axis\" ) == -1 )";
      segmentonAddToScene_3 = "   {";
      segmentonAddToScene_4 = "      // USING JOYSTICK BUTTONS OR KEYBOARD KEYS";
      segmentonAddToScene_5 = "      moveMap.bindMulti( getWord( %this.Stop , 0 ),  getWord( %this.Stop , 1 ),  %this, \"onStop\" );";
      segmentonAddToScene_6 = "   }";
      segmentonAddToScene_7 = "   else";
      segmentonAddToScene_8 = "   {";
      segmentonAddToScene_9 = "      // USING JOYSTICK AXIS";
      segments = "behaviorFields\tonAddToScene\tkeepAll";
};
//--- OBJECT WRITE END ---
//--- OBJECT WRITE BEGIN ---
new ScriptObject(full_01MovementInput_Generic_moveSmoothRotate_m) {
   canSaveDynamicFields = "1";
   class = "behaviorAtom";
      behaviorType = "01 - Generic Movements (Key/Joy/Con; Multibind)";
      description = "Rotate smoothly (over time) left/right. (Individual directions may be disabled.)";
      details_atomName = "moveSmoothRotate_m";
      details_category = "01 - Movement (Input)";
      details_eventAction = "full";
      details_subCategory = "Generic";
      friendlyName = "Smooth Rotate (multi)";
      segmentbehaviorFields = "8";
      segmentbehaviorFields_0 = "   %behavior.addBehaviorField( \"rotateRate\", \"Rotation rate in degrees.\", float, 90 );   ";
      segmentbehaviorFields_1 = "   %behavior.addBehaviorField( \"Counterclockwise\",  \"Rotate Counterclockwise\",  keybind, \"Keyboard A\" );";
      segmentbehaviorFields_2 = "   %behavior.addBehaviorField( \"Clockwise\", \"Rotate Clockwise\", keybind, \"Keyboard D\" );";
      segmentbehaviorFields_3 = "   %behavior.addBehaviorField( \"limitAngle\",  \"Limit rotations to a specified range.\", bool, false );";
      segmentbehaviorFields_4 = "   %behavior.addBehaviorField( \"minAngle\", \"Minimum counterclockwise rotation angle.\", float, -85 );   ";
      segmentbehaviorFields_5 = "   %behavior.addBehaviorField( \"maxAngle\", \"Maximum clockwise rotation angle.\", float, 85 );   ";
      segmentbehaviorFields_6 = "   %behavior.addBehaviorField( \"Enable_Counterclockwise\",  \"Enable Rotate Counterclockwise\", bool, true );";
      segmentbehaviorFields_7 = "   %behavior.addBehaviorField( \"Enable_Clockwise\",  \"Enable Rotate Clockwise\", bool, true );";
      segmentkeepAll = "77";
      segmentkeepAll_0 = "function moveSmoothRotate_m::onRotateCounterclockwise( %this , %val )";
      segmentkeepAll_1 = "{   ";
      segmentkeepAll_10 = "      %val = -%val; // Flip to get proper direction";
      segmentkeepAll_11 = "   }";
      segmentkeepAll_12 = "   %this.inputX  = %val;";
      segmentkeepAll_13 = "   %this.doRotate();";
      segmentkeepAll_14 = "}";
      segmentkeepAll_15 = "function moveSmoothRotate_m::onRotateClockwise( %this , %val )";
      segmentkeepAll_16 = "{   ";
      segmentkeepAll_17 = "   //error(\"moveSmoothRotate_m::onRotateClockwise( \", %val , \" ) \" );";
      segmentkeepAll_18 = "   %this.Clockwise = %val;";
      segmentkeepAll_19 = "   if(!%val && %this.Counterclockwise) %val = -1; ";
      segmentkeepAll_2 = "   //error(\"moveSmoothRotate_m::onRotateCounterclockwise( \", %val , \" ) \" );";
      segmentkeepAll_20 = "   %this.inputX  = %val;";
      segmentkeepAll_21 = "   ";
      segmentkeepAll_22 = "   %this.doRotate();";
      segmentkeepAll_23 = "}";
      segmentkeepAll_24 = "function moveSmoothRotate_m::onRotateJoystickCounterclockwiseClockwise( %this , %val )";
      segmentkeepAll_25 = "{   ";
      segmentkeepAll_26 = "   //error(\"moveSmoothRotate_m::onRotateJoystickCounterclockwiseClockwise( \", %val , \" ) \" );";
      segmentkeepAll_27 = "   ";
      segmentkeepAll_28 = "   // Clockwise";
      segmentkeepAll_29 = "   if( %val < 0 )";
      segmentkeepAll_3 = "   %this.Counterclockwise = %val;";
      segmentkeepAll_30 = "   {";
      segmentkeepAll_31 = "      if(%this.Enable_Clockwise)";
      segmentkeepAll_32 = "      {";
      segmentkeepAll_33 = "         %this.inputX = %val;";
      segmentkeepAll_34 = "      }";
      segmentkeepAll_35 = "      else";
      segmentkeepAll_36 = "      {";
      segmentkeepAll_37 = "         %this.inputX = 0;";
      segmentkeepAll_38 = "      }";
      segmentkeepAll_39 = "      %this.inputX = mFloor(%this.inputX);";
      segmentkeepAll_4 = "   if(!%val && %this.Clockwise) ";
      segmentkeepAll_40 = "   }";
      segmentkeepAll_41 = "   // Counterclockwise";
      segmentkeepAll_42 = "   else if (%val > 0)";
      segmentkeepAll_43 = "   {";
      segmentkeepAll_44 = "      if(%this.Enable_Counterclockwise)";
      segmentkeepAll_45 = "      {";
      segmentkeepAll_46 = "         %this.inputX = %val;";
      segmentkeepAll_47 = "      }";
      segmentkeepAll_48 = "      else";
      segmentkeepAll_49 = "      {";
      segmentkeepAll_5 = "   {";
      segmentkeepAll_50 = "         %this.inputX = 0;";
      segmentkeepAll_51 = "      }";
      segmentkeepAll_52 = "      %this.inputX = mCeil(%this.inputX);";
      segmentkeepAll_53 = "   }";
      segmentkeepAll_54 = "   // Off";
      segmentkeepAll_55 = "   else";
      segmentkeepAll_56 = "   {";
      segmentkeepAll_57 = "      %this.inputX = 0;";
      segmentkeepAll_58 = "   }";
      segmentkeepAll_59 = "   %this.doRotate();";
      segmentkeepAll_6 = "      %val = 1;";
      segmentkeepAll_60 = "}";
      segmentkeepAll_61 = "function moveSmoothRotate_m::doRotate( %this )";
      segmentkeepAll_62 = "{   ";
      segmentkeepAll_63 = "   // if using limited-rotation, rotate to the min or max angle";
      segmentkeepAll_64 = "   if( %this.limitAngle && ( %this.inputX < 0 )  )";
      segmentkeepAll_65 = "   {";
      segmentkeepAll_66 = "      %this.owner.rotateTo( %this.minAngle , %this.rotateRate, true  ); ";
      segmentkeepAll_67 = "   }";
      segmentkeepAll_68 = "   else if( %this.limitAngle && ( %this.inputX > 0 ) )";
      segmentkeepAll_69 = "   {";
      segmentkeepAll_7 = "   }";
      segmentkeepAll_70 = "      %this.owner.rotateTo( %this.maxAngle , %this.rotateRate, true  ); ";
      segmentkeepAll_71 = "   } ";
      segmentkeepAll_72 = "   else";
      segmentkeepAll_73 = "   {";
      segmentkeepAll_74 = "      %this.owner.setAngularVelocity( %this.inputX * %this.rotateRate );";
      segmentkeepAll_75 = "   }";
      segmentkeepAll_76 = "}";
      segmentkeepAll_8 = "   else";
      segmentkeepAll_9 = "   {";
      segmentonAddToScene = "20";
      segmentonAddToScene_0 = "   // Note: Do not use a joystick for only one part of a Rotation pair. ";
      segmentonAddToScene_1 = "   // Ex: If you use joystick yaxis for up, use it for down too.";
      segmentonAddToScene_10 = "   else";
      segmentonAddToScene_11 = "   {";
      segmentonAddToScene_12 = "      // USING JOYSTICK AXIS";
      segmentonAddToScene_13 = "      moveMap.bindMulti( getWord( %this.Counterclockwise , 0 ), getWord( %this.Counterclockwise , 1 ), %this, \"onRotateJoystickCounterclockwiseClockwise\" );";
      segmentonAddToScene_14 = "   }";
      segmentonAddToScene_15 = "  ";
      segmentonAddToScene_16 = "   %this.inputX = 0;";
      segmentonAddToScene_17 = "   %this.inputY = 0;";
      segmentonAddToScene_18 = "   %this.Counterclockwise = 0;";
      segmentonAddToScene_19 = "   %this.Clockwise = 0;";
      segmentonAddToScene_2 = "   if( strstr( getWord( %this.Counterclockwise , 1 ), \"axis\" ) == -1 )";
      segmentonAddToScene_3 = "   {";
      segmentonAddToScene_4 = "      // USING JOYSTICK BUTTONS OR KEYBOARD KEYS";
      segmentonAddToScene_5 = "   if(%this.Enable_Counterclockwise)";
      segmentonAddToScene_6 = "      moveMap.bindMulti( getWord( %this.Counterclockwise , 0 ),  getWord( %this.Counterclockwise , 1 ),  %this, \"onRotateCounterclockwise\" );";
      segmentonAddToScene_7 = "   if(%this.Enable_Clockwise)";
      segmentonAddToScene_8 = "      moveMap.bindMulti( getWord( %this.Clockwise , 0 ), getWord( %this.Clockwise , 1 ), %this, \"onRotateClockwise\" );";
      segmentonAddToScene_9 = "   }";
      segments = "behaviorFields\tonAddToScene\tkeepAll";
};
//--- OBJECT WRITE END ---
//--- OBJECT WRITE BEGIN ---
new ScriptObject(full_01MovementInput_Generic_moveLinear_m) {
   canSaveDynamicFields = "1";
   class = "behaviorAtom";
      behaviorType = "01 - Generic Movements (Key/Joy/Con; Multibind)";
      description = "Move at a fixed (linear) rate up/down/left/right. (Individual directions may be disabled.)";
      details_atomName = "moveLinear_m";
      details_category = "01 - Movement (Input)";
      details_eventAction = "full";
      details_subCategory = "Generic";
      friendlyName = "Linear Velocity (multi)";
      segmentbehaviorFields = "12";
      segmentbehaviorFields_0 = "   %behavior.addBehaviorField( \"Speed\", \"Movement Speed\", float, 50 );   ";
      segmentbehaviorFields_1 = "   %behavior.addBehaviorField( \"Up\",    \"Move Up\",    keybind, \"Keyboard W\" );";
      segmentbehaviorFields_10 = "   %behavior.addBehaviorField( \"Force_Digital_Input\",  \"Force joystick inputs to be on/off.\", bool, false );";
      segmentbehaviorFields_11 = "   %behavior.addBehaviorField( \"Account_For_Facing\",  \"Account for direction player is facing.\", bool, false );";
      segmentbehaviorFields_2 = "   %behavior.addBehaviorField( \"Down\",  \"Move Down\",  keybind, \"Keyboard S\" );";
      segmentbehaviorFields_3 = "   %behavior.addBehaviorField( \"Left\",  \"Move Left\",  keybind, \"Keyboard A\" );";
      segmentbehaviorFields_4 = "   %behavior.addBehaviorField( \"Right\", \"Move Right\", keybind, \"Keyboard D\" );";
      segmentbehaviorFields_5 = "   %behavior.addBehaviorField( \"Enable_Up\",  \"Enable Move Up\", bool, true );";
      segmentbehaviorFields_6 = "   %behavior.addBehaviorField( \"Enable_Down\",  \"Enable Move Down\", bool, true );";
      segmentbehaviorFields_7 = "   %behavior.addBehaviorField( \"Enable_Left\",  \"Enable Move Left\", bool, true );";
      segmentbehaviorFields_8 = "   %behavior.addBehaviorField( \"Enable_Right\",  \"Enable Move Right\", bool, true );";
      segmentbehaviorFields_9 = "   %behavior.addBehaviorField( \"Opposites_Cancel\",  \"Movements in opposite directions cancel out.\", bool, false );";
      segmentkeepAll = "176";
      segmentkeepAll_0 = "function moveLinear_m::onMoveUp( %this , %val )";
      segmentkeepAll_1 = "{   ";
      segmentkeepAll_10 = "   }";
      segmentkeepAll_100 = "   %this.right = %val;";
      segmentkeepAll_101 = "   if(!%val && %this.left) %val = -1; ";
      segmentkeepAll_102 = "   %this.inputX  = %val;";
      segmentkeepAll_103 = "   ";
      segmentkeepAll_104 = "   if(%this.Opposites_Cancel && %this.left && %this.right)";
      segmentkeepAll_105 = "   {";
      segmentkeepAll_106 = "      %this.inputX = 0;";
      segmentkeepAll_107 = "   }";
      segmentkeepAll_108 = "   ";
      segmentkeepAll_109 = "   %this.doMove();";
      segmentkeepAll_11 = "   ";
      segmentkeepAll_110 = "}";
      segmentkeepAll_111 = "function moveLinear_m::onMoveJoystickLeftRight( %this , %val )";
      segmentkeepAll_112 = "{   ";
      segmentkeepAll_113 = "   //error(\"moveLinear_m::onMoveJoystickLeftRight( \", %val , \" ) \" );";
      segmentkeepAll_114 = "   ";
      segmentkeepAll_115 = "   // Right";
      segmentkeepAll_116 = "   if( %val < 0 )";
      segmentkeepAll_117 = "   {";
      segmentkeepAll_118 = "      if(%this.Enable_Right)";
      segmentkeepAll_119 = "      {";
      segmentkeepAll_12 = "   %this.doMove();";
      segmentkeepAll_120 = "         %this.inputX = %val;";
      segmentkeepAll_121 = "      }";
      segmentkeepAll_122 = "      else";
      segmentkeepAll_123 = "      {";
      segmentkeepAll_124 = "         %this.inputX = 0;";
      segmentkeepAll_125 = "      }";
      segmentkeepAll_126 = "      if(%this.Force_Digital_Input)";
      segmentkeepAll_127 = "      {";
      segmentkeepAll_128 = "         %this.inputX = mFloor(%this.inputX);";
      segmentkeepAll_129 = "         //error(\"Force_Digital_Input => \", %this.inputX);";
      segmentkeepAll_13 = "}";
      segmentkeepAll_130 = "      }";
      segmentkeepAll_131 = "   }";
      segmentkeepAll_132 = "   // Left";
      segmentkeepAll_133 = "   else if (%val > 0)";
      segmentkeepAll_134 = "   {";
      segmentkeepAll_135 = "      if(%this.Enable_Left)";
      segmentkeepAll_136 = "      {";
      segmentkeepAll_137 = "         %this.inputX = %val;";
      segmentkeepAll_138 = "      }";
      segmentkeepAll_139 = "      else";
      segmentkeepAll_14 = "function moveLinear_m::onMoveDown( %this , %val )";
      segmentkeepAll_140 = "      {";
      segmentkeepAll_141 = "         %this.inputX = 0;";
      segmentkeepAll_142 = "      }";
      segmentkeepAll_143 = "      if(%this.Force_Digital_Input)";
      segmentkeepAll_144 = "      {";
      segmentkeepAll_145 = "         %this.inputX = mCeil(%this.inputX);";
      segmentkeepAll_146 = "         //error(\"Force_Digital_Input => \", %this.inputX);";
      segmentkeepAll_147 = "      }";
      segmentkeepAll_148 = "   }";
      segmentkeepAll_149 = "   // Off";
      segmentkeepAll_15 = "{   ";
      segmentkeepAll_150 = "   else";
      segmentkeepAll_151 = "   {";
      segmentkeepAll_152 = "      %this.inputX = 0;";
      segmentkeepAll_153 = "   }";
      segmentkeepAll_154 = "   %this.doMove();";
      segmentkeepAll_155 = "}";
      segmentkeepAll_156 = "function moveLinear_m::doMove( %this )";
      segmentkeepAll_157 = "{   ";
      segmentkeepAll_158 = "}";
      segmentkeepAll_159 = "function moveLinear_m::doMove( %this )";
      segmentkeepAll_16 = "   //error(\"moveLinear_m::onMoveDown( \", %val , \" ) \" );";
      segmentkeepAll_160 = "{   ";
      segmentkeepAll_161 = "   ";
      segmentkeepAll_162 = "   if(%this.Account_For_Facing)";
      segmentkeepAll_163 = "   {";
      segmentkeepAll_164 = "      %vector    = %this.inputX SPC -%this.inputY;";
      segmentkeepAll_165 = "      %magnitude = t2dVectorLength( %vector );";
      segmentkeepAll_166 = "      %normVec   = t2dVectorNormalise( %vector );";
      segmentkeepAll_167 = "      %angle     = vectorToAngle(%normVec) + %this.owner.getRotation();";
      segmentkeepAll_168 = "      %this.owner.setLinearVelocityPolar( %angle , %magnitude * %this.Speed );";
      segmentkeepAll_169 = "   }";
      segmentkeepAll_17 = "   %this.down = %val;";
      segmentkeepAll_170 = "   else";
      segmentkeepAll_171 = "   {";
      segmentkeepAll_172 = "      %this.owner.setLinearVelocity( %this.inputX * %this.Speed, ";
      segmentkeepAll_173 = "                                    -%this.inputY * %this.Speed );";
      segmentkeepAll_174 = "   }";
      segmentkeepAll_175 = "}";
      segmentkeepAll_18 = "   if(!%val && %this.up) ";
      segmentkeepAll_19 = "   {";
      segmentkeepAll_2 = "   //error(\"moveLinear_m::onMoveUp( \", %val , \" ) \" );";
      segmentkeepAll_20 = "      %val = 1;";
      segmentkeepAll_21 = "   }";
      segmentkeepAll_22 = "   else";
      segmentkeepAll_23 = "   {";
      segmentkeepAll_24 = "      %val = -%val; // Flip to get proper direction";
      segmentkeepAll_25 = "   }";
      segmentkeepAll_26 = "   %this.inputY  = %val;";
      segmentkeepAll_27 = "   if(%this.Opposites_Cancel && %this.up && %this.down)";
      segmentkeepAll_28 = "   {";
      segmentkeepAll_29 = "      %this.inputY = 0;";
      segmentkeepAll_3 = "   %this.up = %val;";
      segmentkeepAll_30 = "   }";
      segmentkeepAll_31 = "   %this.doMove();";
      segmentkeepAll_32 = "}";
      segmentkeepAll_33 = "function moveLinear_m::onMoveJoystickUpDown( %this , %val )";
      segmentkeepAll_34 = "{   ";
      segmentkeepAll_35 = "   //error(\"moveLinear_m::onMoveJoystickUpDown( \", %val , \" ) \" );";
      segmentkeepAll_36 = "   ";
      segmentkeepAll_37 = "   // Up";
      segmentkeepAll_38 = "   if( %val < 0 )";
      segmentkeepAll_39 = "   {";
      segmentkeepAll_4 = "   if(!%val && %this.down) %val = -1; ";
      segmentkeepAll_40 = "      if(%this.Enable_Up)";
      segmentkeepAll_41 = "      {";
      segmentkeepAll_42 = "         %this.inputY = -%val;";
      segmentkeepAll_43 = "      }";
      segmentkeepAll_44 = "      else";
      segmentkeepAll_45 = "      {";
      segmentkeepAll_46 = "         %this.inputY = 0;";
      segmentkeepAll_47 = "      }";
      segmentkeepAll_48 = "      if(%this.Force_Digital_Input)";
      segmentkeepAll_49 = "      {";
      segmentkeepAll_5 = "   %this.inputY  = %val;";
      segmentkeepAll_50 = "         %this.inputY = mCeil(%this.inputY);";
      segmentkeepAll_51 = "         //error(\"Force_Digital_Input => \", %this.inputY);";
      segmentkeepAll_52 = "      }";
      segmentkeepAll_53 = "   }";
      segmentkeepAll_54 = "   // Down";
      segmentkeepAll_55 = "   else if (%val > 0)";
      segmentkeepAll_56 = "   {";
      segmentkeepAll_57 = "      if(%this.Enable_Down)";
      segmentkeepAll_58 = "      {";
      segmentkeepAll_59 = "         %this.inputY = -%val;";
      segmentkeepAll_6 = "   ";
      segmentkeepAll_60 = "      }";
      segmentkeepAll_61 = "      else";
      segmentkeepAll_62 = "      {";
      segmentkeepAll_63 = "         %this.inputY = 0;";
      segmentkeepAll_64 = "      }";
      segmentkeepAll_65 = "      if(%this.Force_Digital_Input)";
      segmentkeepAll_66 = "      {";
      segmentkeepAll_67 = "         %this.inputY = mFloor(%this.inputY);";
      segmentkeepAll_68 = "         //error(\"Force_Digital_Input => \", %this.inputY);";
      segmentkeepAll_69 = "      }";
      segmentkeepAll_7 = "   if(%this.Opposites_Cancel && %this.up && %this.down)";
      segmentkeepAll_70 = "   }";
      segmentkeepAll_71 = "   // Off";
      segmentkeepAll_72 = "   else";
      segmentkeepAll_73 = "   {";
      segmentkeepAll_74 = "      %this.inputY = 0;";
      segmentkeepAll_75 = "   }";
      segmentkeepAll_76 = "   %this.doMove();";
      segmentkeepAll_77 = "}";
      segmentkeepAll_78 = "function moveLinear_m::onMoveLeft( %this , %val )";
      segmentkeepAll_79 = "{   ";
      segmentkeepAll_8 = "   {";
      segmentkeepAll_80 = "   //error(\"moveLinear_m::onMoveLeft( \", %val , \" ) \" );";
      segmentkeepAll_81 = "   %this.left = %val;";
      segmentkeepAll_82 = "   if(!%val && %this.right) ";
      segmentkeepAll_83 = "   {";
      segmentkeepAll_84 = "      %val = 1;";
      segmentkeepAll_85 = "   }";
      segmentkeepAll_86 = "   else";
      segmentkeepAll_87 = "   {";
      segmentkeepAll_88 = "      %val = -%val; // Flip to get proper direction";
      segmentkeepAll_89 = "   }";
      segmentkeepAll_9 = "      %this.inputY = 0;";
      segmentkeepAll_90 = "   %this.inputX  = %val;";
      segmentkeepAll_91 = "   if(%this.Opposites_Cancel && %this.left && %this.right)";
      segmentkeepAll_92 = "   {";
      segmentkeepAll_93 = "      %this.inputX = 0;";
      segmentkeepAll_94 = "   }";
      segmentkeepAll_95 = "   %this.doMove();";
      segmentkeepAll_96 = "}";
      segmentkeepAll_97 = "function moveLinear_m::onMoveRight( %this , %val )";
      segmentkeepAll_98 = "{   ";
      segmentkeepAll_99 = "   //error(\"moveLinear_m::onMoveRight( \", %val , \" ) \" );";
      segmentonAddToScene = "35";
      segmentonAddToScene_0 = "   // Note: Do not use a joystick for only one part of a movement pair. ";
      segmentonAddToScene_1 = "   // Ex: If you use joystick yaxis for up, use it for down too.";
      segmentonAddToScene_10 = "   else";
      segmentonAddToScene_11 = "   {";
      segmentonAddToScene_12 = "      // USING JOYSTICK AXIS";
      segmentonAddToScene_13 = "      moveMap.bindMulti( getWord( %this.Up , 0 ), getWord( %this.Up , 1 ), %this, \"onMoveJoystickUpDown\" );";
      segmentonAddToScene_14 = "   }";
      segmentonAddToScene_15 = "   if( strstr( getWord( %this.Left , 1 ), \"axis\" ) == -1 )";
      segmentonAddToScene_16 = "   {";
      segmentonAddToScene_17 = "      // USING JOYSTICK BUTTONS OR KEYBOARD KEYS";
      segmentonAddToScene_18 = "   if(%this.Enable_Left)";
      segmentonAddToScene_19 = "      moveMap.bindMulti( getWord( %this.Left , 0 ),  getWord( %this.Left , 1 ),  %this, \"onMoveLeft\" );";
      segmentonAddToScene_2 = "   if( strstr( getWord( %this.Up , 1 ), \"axis\" ) == -1 )";
      segmentonAddToScene_20 = "   if(%this.Enable_Right)";
      segmentonAddToScene_21 = "      moveMap.bindMulti( getWord( %this.Right , 0 ), getWord( %this.Right , 1 ), %this, \"onMoveRight\" );";
      segmentonAddToScene_22 = "   }";
      segmentonAddToScene_23 = "   else";
      segmentonAddToScene_24 = "   {";
      segmentonAddToScene_25 = "      // USING JOYSTICK AXIS";
      segmentonAddToScene_26 = "      moveMap.bindMulti( getWord( %this.Left , 0 ), getWord( %this.Left , 1 ), %this, \"onMoveJoystickLeftRight\" );";
      segmentonAddToScene_27 = "   }";
      segmentonAddToScene_28 = "  ";
      segmentonAddToScene_29 = "   %this.inputX = 0;";
      segmentonAddToScene_3 = "   {";
      segmentonAddToScene_30 = "   %this.inputY = 0;";
      segmentonAddToScene_31 = "   %this.up     = 0;";
      segmentonAddToScene_32 = "   %this.down   = 0;";
      segmentonAddToScene_33 = "   %this.left   = 0;";
      segmentonAddToScene_34 = "   %this.right  = 0;";
      segmentonAddToScene_4 = "      // USING JOYSTICK BUTTONS OR KEYBOARD KEYS";
      segmentonAddToScene_5 = "      if(%this.Enable_Up)";
      segmentonAddToScene_6 = "         moveMap.bindMulti( getWord( %this.Up , 0 ),    getWord( %this.Up , 1 ),    %this, \"onMoveUp\" );";
      segmentonAddToScene_7 = "      if(%this.Enable_Down)";
      segmentonAddToScene_8 = "         moveMap.bindMulti( getWord( %this.Down , 0 ),  getWord( %this.Down , 1 ),  %this, \"onMoveDown\" );";
      segmentonAddToScene_9 = "   }";
      segments = "behaviorFields\tonAddToScene\tkeepAll";
};
//--- OBJECT WRITE END ---
//--- OBJECT WRITE BEGIN ---
new ScriptObject(full_01MovementInput_Generic_moveFace_m) {
   canSaveDynamicFields = "1";
   class = "behaviorAtom";
      behaviorType = "01 - Generic Movements (Key/Joy/Con; Multibind)";
      description = "Instantly face up/down/left/right. (Individual directions may be disabled.)";
      details_atomName = "moveFace_m";
      details_category = "01 - Movement (Input)";
      details_eventAction = "full";
      details_subCategory = "Generic";
      friendlyName = "Instant Face (multi)";
      segmentbehaviorFields = "9";
      segmentbehaviorFields_0 = "   %behavior.addBehaviorField( \"Up\",    \"Move Up\",    keybind, \"Keyboard W\" );";
      segmentbehaviorFields_1 = "   %behavior.addBehaviorField( \"Down\",  \"Move Down\",  keybind, \"Keyboard S\" );";
      segmentbehaviorFields_2 = "   %behavior.addBehaviorField( \"Left\",  \"Move Left\",  keybind, \"Keyboard A\" );";
      segmentbehaviorFields_3 = "   %behavior.addBehaviorField( \"Right\", \"Move Right\", keybind, \"Keyboard D\" );";
      segmentbehaviorFields_4 = "   %behavior.addBehaviorField( \"Enable_Up\",  \"Enable Move Up\", bool, true );";
      segmentbehaviorFields_5 = "   %behavior.addBehaviorField( \"Enable_Down\",  \"Enable Move Down\", bool, true );";
      segmentbehaviorFields_6 = "   %behavior.addBehaviorField( \"Enable_Left\",  \"Enable Move Left\", bool, true );";
      segmentbehaviorFields_7 = "   %behavior.addBehaviorField( \"Enable_Right\",  \"Enable Move Right\", bool, true );";
      segmentbehaviorFields_8 = "   %behavior.addBehaviorField( \"Force_Digital_Input\",  \"Force joystick inputs to be on/off.\", bool, false );";
      segmentkeepAll = "144";
      segmentkeepAll_0 = "function moveFace_m::onMoveUp( %this , %val )";
      segmentkeepAll_1 = "{   ";
      segmentkeepAll_10 = "{   ";
      segmentkeepAll_100 = "      if(%this.Enable_Right)";
      segmentkeepAll_101 = "      {";
      segmentkeepAll_102 = "         %this.inputX = %val;";
      segmentkeepAll_103 = "      }";
      segmentkeepAll_104 = "      else";
      segmentkeepAll_105 = "      {";
      segmentkeepAll_106 = "         %this.inputX = 0;";
      segmentkeepAll_107 = "      }";
      segmentkeepAll_108 = "      if(%this.Force_Digital_Input)";
      segmentkeepAll_109 = "      {";
      segmentkeepAll_11 = "   //error(\"moveFace_m::onMoveDown( \", %val , \" ) \" );";
      segmentkeepAll_110 = "         %this.inputX = mFloor(%this.inputX);";
      segmentkeepAll_111 = "         //error(\"Force_Digital_Input => \", %this.inputX);";
      segmentkeepAll_112 = "      }";
      segmentkeepAll_113 = "   }";
      segmentkeepAll_114 = "   // Left";
      segmentkeepAll_115 = "   else if (%val > 0)";
      segmentkeepAll_116 = "   {";
      segmentkeepAll_117 = "      if(%this.Enable_Left)";
      segmentkeepAll_118 = "      {";
      segmentkeepAll_119 = "         %this.inputX = %val;";
      segmentkeepAll_12 = "   %this.down = %val;";
      segmentkeepAll_120 = "      }";
      segmentkeepAll_121 = "      else";
      segmentkeepAll_122 = "      {";
      segmentkeepAll_123 = "         %this.inputX = 0;";
      segmentkeepAll_124 = "      }";
      segmentkeepAll_125 = "      if(%this.Force_Digital_Input)";
      segmentkeepAll_126 = "      {";
      segmentkeepAll_127 = "         %this.inputX = mCeil(%this.inputX);";
      segmentkeepAll_128 = "         //error(\"Force_Digital_Input => \", %this.inputX);";
      segmentkeepAll_129 = "      }";
      segmentkeepAll_13 = "   if(!%val && %this.up) ";
      segmentkeepAll_130 = "   }";
      segmentkeepAll_131 = "   // Off";
      segmentkeepAll_132 = "   else";
      segmentkeepAll_133 = "   {";
      segmentkeepAll_134 = "      %this.inputX = 0;";
      segmentkeepAll_135 = "   }";
      segmentkeepAll_136 = "   %this.doMove();";
      segmentkeepAll_137 = "}";
      segmentkeepAll_138 = "function moveFace_m::doMove( %this )";
      segmentkeepAll_139 = "{   ";
      segmentkeepAll_14 = "   {";
      segmentkeepAll_140 = "   if(!%this.inputX && !%this.inputY) return;";
      segmentkeepAll_141 = "   %facingAngle = vectorToAngle( %this.inputX SPC -%this.inputY );";
      segmentkeepAll_142 = "   %this.owner.setRotation(%facingAngle);";
      segmentkeepAll_143 = "}";
      segmentkeepAll_15 = "      %val = 1;";
      segmentkeepAll_16 = "   }";
      segmentkeepAll_17 = "   else";
      segmentkeepAll_18 = "   {";
      segmentkeepAll_19 = "      %val = -%val; // Flip to get proper direction";
      segmentkeepAll_2 = "   //error(\"moveFace_m::onMoveUp( \", %val , \" ) \" );";
      segmentkeepAll_20 = "   }";
      segmentkeepAll_21 = "   %this.inputY  = %val;";
      segmentkeepAll_22 = "   %this.doMove();";
      segmentkeepAll_23 = "}";
      segmentkeepAll_24 = "function moveFace_m::onMoveJoystickUpDown( %this , %val )";
      segmentkeepAll_25 = "{   ";
      segmentkeepAll_26 = "   //error(\"moveFace_m::onMoveJoystickUpDown( \", %val , \" ) \" );";
      segmentkeepAll_27 = "   ";
      segmentkeepAll_28 = "   // Up";
      segmentkeepAll_29 = "   if( %val < 0 )";
      segmentkeepAll_3 = "   %this.up = %val;";
      segmentkeepAll_30 = "   {";
      segmentkeepAll_31 = "      if(%this.Enable_Up)";
      segmentkeepAll_32 = "      {";
      segmentkeepAll_33 = "         %this.inputY = -%val;";
      segmentkeepAll_34 = "      }";
      segmentkeepAll_35 = "      else";
      segmentkeepAll_36 = "      {";
      segmentkeepAll_37 = "         %this.inputY = 0;";
      segmentkeepAll_38 = "      }";
      segmentkeepAll_39 = "      if(%this.Force_Digital_Input)";
      segmentkeepAll_4 = "   if(!%val && %this.down) %val = -1; ";
      segmentkeepAll_40 = "      {";
      segmentkeepAll_41 = "         %this.inputY = mCeil(%this.inputY);";
      segmentkeepAll_42 = "         //error(\"Force_Digital_Input => \", %this.inputY);";
      segmentkeepAll_43 = "      }";
      segmentkeepAll_44 = "   }";
      segmentkeepAll_45 = "   // Down";
      segmentkeepAll_46 = "   else if (%val > 0)";
      segmentkeepAll_47 = "   {";
      segmentkeepAll_48 = "      if(%this.Enable_Down)";
      segmentkeepAll_49 = "      {";
      segmentkeepAll_5 = "   %this.inputY  = %val;";
      segmentkeepAll_50 = "         %this.inputY = -%val;";
      segmentkeepAll_51 = "      }";
      segmentkeepAll_52 = "      else";
      segmentkeepAll_53 = "      {";
      segmentkeepAll_54 = "         %this.inputY = 0;";
      segmentkeepAll_55 = "      }";
      segmentkeepAll_56 = "      if(%this.Force_Digital_Input)";
      segmentkeepAll_57 = "      {";
      segmentkeepAll_58 = "         %this.inputY = mFloor(%this.inputY);";
      segmentkeepAll_59 = "         //error(\"Force_Digital_Input => \", %this.inputY);";
      segmentkeepAll_6 = "   ";
      segmentkeepAll_60 = "      }";
      segmentkeepAll_61 = "   }";
      segmentkeepAll_62 = "   // Off";
      segmentkeepAll_63 = "   else";
      segmentkeepAll_64 = "   {";
      segmentkeepAll_65 = "      %this.inputY = 0;";
      segmentkeepAll_66 = "   }";
      segmentkeepAll_67 = "   %this.doMove();";
      segmentkeepAll_68 = "}";
      segmentkeepAll_69 = "function moveFace_m::onMoveLeft( %this , %val )";
      segmentkeepAll_7 = "   %this.doMove();";
      segmentkeepAll_70 = "{   ";
      segmentkeepAll_71 = "   //error(\"moveFace_m::onMoveLeft( \", %val , \" ) \" );";
      segmentkeepAll_72 = "   %this.left = %val;";
      segmentkeepAll_73 = "   if(!%val && %this.right) ";
      segmentkeepAll_74 = "   {";
      segmentkeepAll_75 = "      %val = 1;";
      segmentkeepAll_76 = "   }";
      segmentkeepAll_77 = "   else";
      segmentkeepAll_78 = "   {";
      segmentkeepAll_79 = "      %val = -%val; // Flip to get proper direction";
      segmentkeepAll_8 = "}";
      segmentkeepAll_80 = "   }";
      segmentkeepAll_81 = "   %this.inputX  = %val;";
      segmentkeepAll_82 = "   %this.doMove();";
      segmentkeepAll_83 = "}";
      segmentkeepAll_84 = "function moveFace_m::onMoveRight( %this , %val )";
      segmentkeepAll_85 = "{   ";
      segmentkeepAll_86 = "   //error(\"moveFace_m::onMoveRight( \", %val , \" ) \" );";
      segmentkeepAll_87 = "   %this.right = %val;";
      segmentkeepAll_88 = "   if(!%val && %this.left) %val = -1; ";
      segmentkeepAll_89 = "   %this.inputX  = %val;";
      segmentkeepAll_9 = "function moveFace_m::onMoveDown( %this , %val )";
      segmentkeepAll_90 = "   ";
      segmentkeepAll_91 = "   %this.doMove();";
      segmentkeepAll_92 = "}";
      segmentkeepAll_93 = "function moveFace_m::onMoveJoystickLeftRight( %this , %val )";
      segmentkeepAll_94 = "{   ";
      segmentkeepAll_95 = "   //error(\"moveFace_m::onMoveJoystickLeftRight( \", %val , \" ) \" );";
      segmentkeepAll_96 = "   ";
      segmentkeepAll_97 = "   // Right";
      segmentkeepAll_98 = "   if( %val < 0 )";
      segmentkeepAll_99 = "   {";
      segmentonAddToScene = "35";
      segmentonAddToScene_0 = "   // Note: Do not use a joystick for only one part of a movement pair. ";
      segmentonAddToScene_1 = "   // Ex: If you use joystick yaxis for up, use it for down too.";
      segmentonAddToScene_10 = "   else";
      segmentonAddToScene_11 = "   {";
      segmentonAddToScene_12 = "      // USING JOYSTICK AXIS";
      segmentonAddToScene_13 = "      moveMap.bindMulti( getWord( %this.Up , 0 ), getWord( %this.Up , 1 ), %this, \"onMoveJoystickUpDown\" );";
      segmentonAddToScene_14 = "   }";
      segmentonAddToScene_15 = "   if( strstr( getWord( %this.Left , 1 ), \"axis\" ) == -1 )";
      segmentonAddToScene_16 = "   {";
      segmentonAddToScene_17 = "      // USING JOYSTICK BUTTONS OR KEYBOARD KEYS";
      segmentonAddToScene_18 = "   if(%this.Enable_Left)";
      segmentonAddToScene_19 = "      moveMap.bindMulti( getWord( %this.Left , 0 ),  getWord( %this.Left , 1 ),  %this, \"onMoveLeft\" );";
      segmentonAddToScene_2 = "   if( strstr( getWord( %this.Up , 1 ), \"axis\" ) == -1 )";
      segmentonAddToScene_20 = "   if(%this.Enable_Right)";
      segmentonAddToScene_21 = "      moveMap.bindMulti( getWord( %this.Right , 0 ), getWord( %this.Right , 1 ), %this, \"onMoveRight\" );";
      segmentonAddToScene_22 = "   }";
      segmentonAddToScene_23 = "   else";
      segmentonAddToScene_24 = "   {";
      segmentonAddToScene_25 = "      // USING JOYSTICK AXIS";
      segmentonAddToScene_26 = "      moveMap.bindMulti( getWord( %this.Left , 0 ), getWord( %this.Left , 1 ), %this, \"onMoveJoystickLeftRight\" );";
      segmentonAddToScene_27 = "   }";
      segmentonAddToScene_28 = "  ";
      segmentonAddToScene_29 = "   %this.inputX = 0;";
      segmentonAddToScene_3 = "   {";
      segmentonAddToScene_30 = "   %this.inputY = 0;";
      segmentonAddToScene_31 = "   %this.up     = 0;";
      segmentonAddToScene_32 = "   %this.down   = 0;";
      segmentonAddToScene_33 = "   %this.left   = 0;";
      segmentonAddToScene_34 = "   %this.right  = 0;";
      segmentonAddToScene_4 = "      // USING JOYSTICK BUTTONS OR KEYBOARD KEYS";
      segmentonAddToScene_5 = "      if(%this.Enable_Up)";
      segmentonAddToScene_6 = "         moveMap.bindMulti( getWord( %this.Up , 0 ),    getWord( %this.Up , 1 ),    %this, \"onMoveUp\" );";
      segmentonAddToScene_7 = "      if(%this.Enable_Down)";
      segmentonAddToScene_8 = "         moveMap.bindMulti( getWord( %this.Down , 0 ),  getWord( %this.Down , 1 ),  %this, \"onMoveDown\" );";
      segmentonAddToScene_9 = "   }";
      segments = "behaviorFields\tonAddToScene\tkeepAll";
};
//--- OBJECT WRITE END ---
//--- OBJECT WRITE BEGIN ---
new ScriptObject(full_01MovementInput_Generic_moveDiscreteRotate_m) {
   canSaveDynamicFields = "1";
   class = "behaviorAtom";
      behaviorType = "01 - Generic Movements (Key/Joy/Con; Multibind)";
      description = "Rotate left/right in discrete increments. (Individual directions may be disabled.";
      details_atomName = "moveDiscreteRotate_m";
      details_category = "01 - Movement (Input)";
      details_eventAction = "full";
      details_subCategory = "Generic";
      friendlyName = "Discrete Rotate (multi)";
      segmentbehaviorFields = "12";
      segmentbehaviorFields_0 = "   %behavior.addBehaviorField( \"stepSize\", \"Step size in degrees.\", float, 5 );   ";
      segmentbehaviorFields_1 = "   %behavior.addBehaviorField( \"continuousStepping\", \"Step while key is held.\", bool, true );   ";
      segmentbehaviorFields_10 = "   %behavior.addBehaviorField( \"Opposites_Cancel\",  \"Rotations in opposite directions cancel out.\", bool, false );";
      segmentbehaviorFields_11 = "   %behavior.addBehaviorField( \"Force_Digital_Input\",  \"Force joystick inputs to be on/off.\", bool, false );";
      segmentbehaviorFields_2 = "   %behavior.addBehaviorField( \"stepTime\", \"Step time in milliseconds.\", integer, 100 );   ";
      segmentbehaviorFields_3 = "   %behavior.addBehaviorField( \"Counterclockwise\",  \"Rotate Counterclockwise\",  keybind, \"Keyboard A\" );";
      segmentbehaviorFields_4 = "   %behavior.addBehaviorField( \"Clockwise\", \"Rotate Clockwise\", keybind, \"Keyboard D\" );";
      segmentbehaviorFields_5 = "   %behavior.addBehaviorField( \"limitAngle\",  \"Limit rotations to a specified range.\", bool, false );";
      segmentbehaviorFields_6 = "   %behavior.addBehaviorField( \"minAngle\", \"Minimum counterclockwise rotation angle.\", float, -85 );   ";
      segmentbehaviorFields_7 = "   %behavior.addBehaviorField( \"maxAngle\", \"Maximum clockwise rotation angle.\", float, 85 );   ";
      segmentbehaviorFields_8 = "   %behavior.addBehaviorField( \"Enable_Counterclockwise\",  \"Enable Rotate Counterclockwise\", bool, true );";
      segmentbehaviorFields_9 = "   %behavior.addBehaviorField( \"Enable_Clockwise\",  \"Enable Rotate Clockwise\", bool, true );";
      segmentkeepAll = "119";
      segmentkeepAll_0 = "function moveDiscreteRotate_m::onRotateCounterclockwise( %this , %val )";
      segmentkeepAll_1 = "{   ";
      segmentkeepAll_10 = "      %val = -%val; // Flip to get proper direction";
      segmentkeepAll_100 = "   else if( %this.limitAngle && ( %this.inputX > 0 ) && ( %currentRotation >= %this.maxAngle ) )";
      segmentkeepAll_101 = "   {";
      segmentkeepAll_102 = "      %this.owner.setRotation( %this.maxAngle );";
      segmentkeepAll_103 = "      %this.owner.setAngularVelocity( 0 );";
      segmentkeepAll_104 = "   } ";
      segmentkeepAll_105 = "   else";
      segmentkeepAll_106 = "   {";
      segmentkeepAll_107 = "      //";
      segmentkeepAll_108 = "      // Apply \'thrust\' values";
      segmentkeepAll_109 = "      //      ";
      segmentkeepAll_11 = "   }";
      segmentkeepAll_110 = "      echo(\"rotating...\");";
      segmentkeepAll_111 = "      %this.owner.setRotation( %currentRotation + %angleDelta );";
      segmentkeepAll_112 = "   }";
      segmentkeepAll_113 = "   ";
      segmentkeepAll_114 = "   if(%angleDelta && %this.continuousStepping) ";
      segmentkeepAll_115 = "   {  ";
      segmentkeepAll_116 = "      %this.lastSchedule = %this.schedule(%this.stepTime, doRotate);";
      segmentkeepAll_117 = "   }";
      segmentkeepAll_118 = "}";
      segmentkeepAll_12 = "   %this.inputX  = %val;";
      segmentkeepAll_13 = "   if(%this.Opposites_Cancel && %this.Counterclockwise && %this.Clockwise)";
      segmentkeepAll_14 = "   {";
      segmentkeepAll_15 = "      %this.inputX = 0;";
      segmentkeepAll_16 = "   }";
      segmentkeepAll_17 = "   cancel(%this.lastSchedule);";
      segmentkeepAll_18 = "   %this.doRotate();";
      segmentkeepAll_19 = "}";
      segmentkeepAll_2 = "   //error(\"moveDiscreteRotate_m::onRotateCounterclockwise( \", %val , \" ) \" );";
      segmentkeepAll_20 = "function moveDiscreteRotate_m::onRotateClockwise( %this , %val )";
      segmentkeepAll_21 = "{   ";
      segmentkeepAll_22 = "   //error(\"moveDiscreteRotate_m::onRotateClockwise( \", %val , \" ) \" );";
      segmentkeepAll_23 = "   %this.Clockwise = %val;";
      segmentkeepAll_24 = "   if(!%val && %this.Counterclockwise) %val = -1; ";
      segmentkeepAll_25 = "   %this.inputX  = %val;";
      segmentkeepAll_26 = "   ";
      segmentkeepAll_27 = "   if(%this.Opposites_Cancel && %this.Counterclockwise && %this.Clockwise)";
      segmentkeepAll_28 = "   {";
      segmentkeepAll_29 = "      %this.inputX = 0;";
      segmentkeepAll_3 = "   %this.Counterclockwise = %val;";
      segmentkeepAll_30 = "   }";
      segmentkeepAll_31 = "   ";
      segmentkeepAll_32 = "   cancel(%this.lastSchedule);";
      segmentkeepAll_33 = "   %this.doRotate();";
      segmentkeepAll_34 = "}";
      segmentkeepAll_35 = "function moveDiscreteRotate_m::onRotateJoystickCounterclockwiseClockwise( %this , %val )";
      segmentkeepAll_36 = "{   ";
      segmentkeepAll_37 = "   //error(\"moveDiscreteRotate_m::onRotateJoystickCounterclockwiseClockwise( \", %val , \" ) \" );";
      segmentkeepAll_38 = "   ";
      segmentkeepAll_39 = "   // Clockwise";
      segmentkeepAll_4 = "   if(!%val && %this.Clockwise) ";
      segmentkeepAll_40 = "   if( %val < 0 )";
      segmentkeepAll_41 = "   {";
      segmentkeepAll_42 = "      if(%this.Enable_Clockwise)";
      segmentkeepAll_43 = "      {";
      segmentkeepAll_44 = "         %this.inputX = %val;";
      segmentkeepAll_45 = "      }";
      segmentkeepAll_46 = "      else";
      segmentkeepAll_47 = "      {";
      segmentkeepAll_48 = "         %this.inputX = 0;";
      segmentkeepAll_49 = "      }";
      segmentkeepAll_5 = "   {";
      segmentkeepAll_50 = "      if(%this.Force_Digital_Input)";
      segmentkeepAll_51 = "      {";
      segmentkeepAll_52 = "         %this.inputX = mFloor(%this.inputX);";
      segmentkeepAll_53 = "         //error(\"Force_Digital_Input => \", %this.inputX);";
      segmentkeepAll_54 = "      }";
      segmentkeepAll_55 = "   }";
      segmentkeepAll_56 = "   // Counterclockwise";
      segmentkeepAll_57 = "   else if (%val > 0)";
      segmentkeepAll_58 = "   {";
      segmentkeepAll_59 = "      if(%this.Enable_Counterclockwise)";
      segmentkeepAll_6 = "      %val = 1;";
      segmentkeepAll_60 = "      {";
      segmentkeepAll_61 = "         %this.inputX = %val;";
      segmentkeepAll_62 = "      }";
      segmentkeepAll_63 = "      else";
      segmentkeepAll_64 = "      {";
      segmentkeepAll_65 = "         %this.inputX = 0;";
      segmentkeepAll_66 = "      }";
      segmentkeepAll_67 = "      if(%this.Force_Digital_Input)";
      segmentkeepAll_68 = "      {";
      segmentkeepAll_69 = "         %this.inputX = mCeil(%this.inputX);";
      segmentkeepAll_7 = "   }";
      segmentkeepAll_70 = "         //error(\"Force_Digital_Input => \", %this.inputX);";
      segmentkeepAll_71 = "      }";
      segmentkeepAll_72 = "   }";
      segmentkeepAll_73 = "   // Off";
      segmentkeepAll_74 = "   else";
      segmentkeepAll_75 = "   {";
      segmentkeepAll_76 = "      %this.inputX = 0;";
      segmentkeepAll_77 = "   }";
      segmentkeepAll_78 = "   cancel(%this.lastSchedule);   ";
      segmentkeepAll_79 = "   %this.doRotate();";
      segmentkeepAll_8 = "   else";
      segmentkeepAll_80 = "}";
      segmentkeepAll_81 = "function moveDiscreteRotate_m::doRotate( %this )";
      segmentkeepAll_82 = "{   ";
      segmentkeepAll_83 = "   //";
      segmentkeepAll_84 = "   // Calculate angular \'thrust\'";
      segmentkeepAll_85 = "   //";
      segmentkeepAll_86 = "   %angleDelta = %this.inputX * %this.stepSize;";
      segmentkeepAll_87 = "   ";
      segmentkeepAll_88 = "   %currentRotation = %this.owner.getRotation(); ";
      segmentkeepAll_89 = "   %currentRotation = (%currentRotation > 180) ? %currentRotation - 360 : %currentRotation; // Work with half-rotations                         ";
      segmentkeepAll_9 = "   {";
      segmentkeepAll_90 = "   //error(\" moveDiscreteRotate_m %       rotation \" SPC %currentRotation );";
      segmentkeepAll_91 = "   //error(\" moveDiscreteRotate_m %angleDelta \" SPC %angleDelta, \"\\n\" );";
      segmentkeepAll_92 = "         ";
      segmentkeepAll_93 = "   // if limited-rotation, and rotated past or to min, snap to min";
      segmentkeepAll_94 = "   if( %this.limitAngle && ( %this.inputX < 0 ) && ( %currentRotation <= %this.minAngle ) )";
      segmentkeepAll_95 = "   {";
      segmentkeepAll_96 = "      %this.owner.setRotation( %this.minAngle );";
      segmentkeepAll_97 = "      %this.owner.setAngularVelocity( 0 );";
      segmentkeepAll_98 = "   }";
      segmentkeepAll_99 = "   // if limited-rotation, and rotated past or to max, snap to max";
      segmentonAddToScene = "20";
      segmentonAddToScene_0 = "   // Note: Do not use a joystick for only one part of a Rotation pair. ";
      segmentonAddToScene_1 = "   // Ex: If you use joystick yaxis for up, use it for down too.";
      segmentonAddToScene_10 = "   else";
      segmentonAddToScene_11 = "   {";
      segmentonAddToScene_12 = "      // USING JOYSTICK AXIS";
      segmentonAddToScene_13 = "      moveMap.bindMulti( getWord( %this.Counterclockwise , 0 ), getWord( %this.Counterclockwise , 1 ), %this, \"onRotateJoystickCounterclockwiseClockwise\" );";
      segmentonAddToScene_14 = "   }";
      segmentonAddToScene_15 = "  ";
      segmentonAddToScene_16 = "   %this.inputX = 0;";
      segmentonAddToScene_17 = "   %this.inputY = 0;";
      segmentonAddToScene_18 = "   %this.Counterclockwise = 0;";
      segmentonAddToScene_19 = "   %this.Clockwise = 0;";
      segmentonAddToScene_2 = "   if( strstr( getWord( %this.Counterclockwise , 1 ), \"axis\" ) == -1 )";
      segmentonAddToScene_3 = "   {";
      segmentonAddToScene_4 = "      // USING JOYSTICK BUTTONS OR KEYBOARD KEYS";
      segmentonAddToScene_5 = "   if(%this.Enable_Counterclockwise)";
      segmentonAddToScene_6 = "      moveMap.bindMulti( getWord( %this.Counterclockwise , 0 ),  getWord( %this.Counterclockwise , 1 ),  %this, \"onRotateCounterclockwise\" );";
      segmentonAddToScene_7 = "   if(%this.Enable_Clockwise)";
      segmentonAddToScene_8 = "      moveMap.bindMulti( getWord( %this.Clockwise , 0 ), getWord( %this.Clockwise , 1 ), %this, \"onRotateClockwise\" );";
      segmentonAddToScene_9 = "   }";
      segments = "behaviorFields\tonAddToScene\tkeepAll";
};
//--- OBJECT WRITE END ---
//--- OBJECT WRITE BEGIN ---
new ScriptObject(full_01MovementInput_Generic_moveConstantForce_m) {
   canSaveDynamicFields = "1";
   class = "behaviorAtom";
      behaviorType = "01 - Generic Movements (Key/Joy/Con; Multibind)";
      description = "Apply constant force up/down/left/right. (Individual directions may be disabled.)";
      details_atomName = "moveConstantForce_m";
      details_category = "01 - Movement (Input)";
      details_eventAction = "full";
      details_subCategory = "Generic";
      friendlyName = "Constant Force (multi)";
      segmentbehaviorFields = "12";
      segmentbehaviorFields_0 = "   %behavior.addBehaviorField( \"Force\", \"Movement Force\", float, 50 );   ";
      segmentbehaviorFields_1 = "   %behavior.addBehaviorField( \"Up\",    \"Move Up\",    keybind, \"Keyboard W\" );";
      segmentbehaviorFields_10 = "   %behavior.addBehaviorField( \"Force_Digital_Input\",  \"Force joystick inputs to be on/off.\", bool, false );";
      segmentbehaviorFields_11 = "   %behavior.addBehaviorField( \"Account_For_Facing\",  \"Account for direction player is facing.\", bool, false );";
      segmentbehaviorFields_2 = "   %behavior.addBehaviorField( \"Down\",  \"Move Down\",  keybind, \"Keyboard S\" );";
      segmentbehaviorFields_3 = "   %behavior.addBehaviorField( \"Left\",  \"Move Left\",  keybind, \"Keyboard A\" );";
      segmentbehaviorFields_4 = "   %behavior.addBehaviorField( \"Right\", \"Move Right\", keybind, \"Keyboard D\" );";
      segmentbehaviorFields_5 = "   %behavior.addBehaviorField( \"Enable_Up\",  \"Enable Move Up\", bool, true );";
      segmentbehaviorFields_6 = "   %behavior.addBehaviorField( \"Enable_Down\",  \"Enable Move Down\", bool, true );";
      segmentbehaviorFields_7 = "   %behavior.addBehaviorField( \"Enable_Left\",  \"Enable Move Left\", bool, true );";
      segmentbehaviorFields_8 = "   %behavior.addBehaviorField( \"Enable_Right\",  \"Enable Move Right\", bool, true );";
      segmentbehaviorFields_9 = "   %behavior.addBehaviorField( \"Opposites_Cancel\",  \"Movements in opposite directions cancel out.\", bool, false );";
      segmentkeepAll = "175";
      segmentkeepAll_0 = "function moveConstantForce_m::onMoveUp( %this , %val )";
      segmentkeepAll_1 = "{   ";
      segmentkeepAll_10 = "   }";
      segmentkeepAll_100 = "   %this.right = %val;";
      segmentkeepAll_101 = "   if(!%val && %this.left) %val = -1; ";
      segmentkeepAll_102 = "   %this.inputX  = %val;";
      segmentkeepAll_103 = "   ";
      segmentkeepAll_104 = "   if(%this.Opposites_Cancel && %this.left && %this.right)";
      segmentkeepAll_105 = "   {";
      segmentkeepAll_106 = "      %this.inputX = 0;";
      segmentkeepAll_107 = "   }";
      segmentkeepAll_108 = "   ";
      segmentkeepAll_109 = "   %this.doMove();";
      segmentkeepAll_11 = "   ";
      segmentkeepAll_110 = "}";
      segmentkeepAll_111 = "function moveConstantForce_m::onMoveJoystickLeftRight( %this , %val )";
      segmentkeepAll_112 = "{   ";
      segmentkeepAll_113 = "   //error(\"moveConstantForce_m::onMoveJoystickLeftRight( \", %val , \" ) \" );";
      segmentkeepAll_114 = "   ";
      segmentkeepAll_115 = "   // Right";
      segmentkeepAll_116 = "   if( %val < 0 )";
      segmentkeepAll_117 = "   {";
      segmentkeepAll_118 = "      if(%this.Enable_Right)";
      segmentkeepAll_119 = "      {";
      segmentkeepAll_12 = "   %this.doMove();";
      segmentkeepAll_120 = "         %this.inputX = %val;";
      segmentkeepAll_121 = "      }";
      segmentkeepAll_122 = "      else";
      segmentkeepAll_123 = "      {";
      segmentkeepAll_124 = "         %this.inputX = 0;";
      segmentkeepAll_125 = "      }";
      segmentkeepAll_126 = "      if(%this.Force_Digital_Input)";
      segmentkeepAll_127 = "      {";
      segmentkeepAll_128 = "         %this.inputX = mFloor(%this.inputX);";
      segmentkeepAll_129 = "         //error(\"Force_Digital_Input => \", %this.inputX);";
      segmentkeepAll_13 = "}";
      segmentkeepAll_130 = "      }";
      segmentkeepAll_131 = "   }";
      segmentkeepAll_132 = "   // Left";
      segmentkeepAll_133 = "   else if (%val > 0)";
      segmentkeepAll_134 = "   {";
      segmentkeepAll_135 = "      if(%this.Enable_Left)";
      segmentkeepAll_136 = "      {";
      segmentkeepAll_137 = "         %this.inputX = %val;";
      segmentkeepAll_138 = "      }";
      segmentkeepAll_139 = "      else";
      segmentkeepAll_14 = "function moveConstantForce_m::onMoveDown( %this , %val )";
      segmentkeepAll_140 = "      {";
      segmentkeepAll_141 = "         %this.inputX = 0;";
      segmentkeepAll_142 = "      }";
      segmentkeepAll_143 = "      if(%this.Force_Digital_Input)";
      segmentkeepAll_144 = "      {";
      segmentkeepAll_145 = "         %this.inputX = mCeil(%this.inputX);";
      segmentkeepAll_146 = "         //error(\"Force_Digital_Input => \", %this.inputX);";
      segmentkeepAll_147 = "      }";
      segmentkeepAll_148 = "   }";
      segmentkeepAll_149 = "   // Off";
      segmentkeepAll_15 = "{   ";
      segmentkeepAll_150 = "   else";
      segmentkeepAll_151 = "   {";
      segmentkeepAll_152 = "      %this.inputX = 0;";
      segmentkeepAll_153 = "   }";
      segmentkeepAll_154 = "   %this.doMove();";
      segmentkeepAll_155 = "}";
      segmentkeepAll_156 = "function moveConstantForce_m::doMove( %this )";
      segmentkeepAll_157 = "{   ";
      segmentkeepAll_158 = "   ";
      segmentkeepAll_159 = "   if(%this.Account_For_Facing)";
      segmentkeepAll_16 = "   //error(\"moveConstantForce_m::onMoveDown( \", %val , \" ) \" );";
      segmentkeepAll_160 = "   {";
      segmentkeepAll_161 = "      %vector    = %this.inputX SPC -%this.inputY;";
      segmentkeepAll_162 = "      %magnitude = t2dVectorLength( %vector );";
      segmentkeepAll_163 = "      %normVec   = t2dVectorNormalise( %vector );";
      segmentkeepAll_164 = "      %angle     = vectorToAngle(%normVec) + %this.owner.getRotation();";
      segmentkeepAll_165 = "      ";
      segmentkeepAll_166 = "      %this.owner.setConstantForcePolar( %angle , %magnitude * %this.Force, true );";
      segmentkeepAll_167 = "   }";
      segmentkeepAll_168 = "   else";
      segmentkeepAll_169 = "   {";
      segmentkeepAll_17 = "   %this.down = %val;";
      segmentkeepAll_170 = "      %this.owner.setConstantForce( %this.inputX * %this.Force, ";
      segmentkeepAll_171 = "                                    -%this.inputY * %this.Force,";
      segmentkeepAll_172 = "                                    true );";
      segmentkeepAll_173 = "   }";
      segmentkeepAll_174 = "}";
      segmentkeepAll_18 = "   if(!%val && %this.up) ";
      segmentkeepAll_19 = "   {";
      segmentkeepAll_2 = "   //error(\"moveConstantForce_m::onMoveUp( \", %val , \" ) \" );";
      segmentkeepAll_20 = "      %val = 1;";
      segmentkeepAll_21 = "   }";
      segmentkeepAll_22 = "   else";
      segmentkeepAll_23 = "   {";
      segmentkeepAll_24 = "      %val = -%val; // Flip to get proper direction";
      segmentkeepAll_25 = "   }";
      segmentkeepAll_26 = "   %this.inputY  = %val;";
      segmentkeepAll_27 = "   if(%this.Opposites_Cancel && %this.up && %this.down)";
      segmentkeepAll_28 = "   {";
      segmentkeepAll_29 = "      %this.inputY = 0;";
      segmentkeepAll_3 = "   %this.up = %val;";
      segmentkeepAll_30 = "   }";
      segmentkeepAll_31 = "   %this.doMove();";
      segmentkeepAll_32 = "}";
      segmentkeepAll_33 = "function moveConstantForce_m::onMoveJoystickUpDown( %this , %val )";
      segmentkeepAll_34 = "{   ";
      segmentkeepAll_35 = "   //error(\"moveConstantForce_m::onMoveJoystickUpDown( \", %val , \" ) \" );";
      segmentkeepAll_36 = "   ";
      segmentkeepAll_37 = "   // Up";
      segmentkeepAll_38 = "   if( %val < 0 )";
      segmentkeepAll_39 = "   {";
      segmentkeepAll_4 = "   if(!%val && %this.down) %val = -1; ";
      segmentkeepAll_40 = "      if(%this.Enable_Up)";
      segmentkeepAll_41 = "      {";
      segmentkeepAll_42 = "         %this.inputY = -%val;";
      segmentkeepAll_43 = "      }";
      segmentkeepAll_44 = "      else";
      segmentkeepAll_45 = "      {";
      segmentkeepAll_46 = "         %this.inputY = 0;";
      segmentkeepAll_47 = "      }";
      segmentkeepAll_48 = "      if(%this.Force_Digital_Input)";
      segmentkeepAll_49 = "      {";
      segmentkeepAll_5 = "   %this.inputY  = %val;";
      segmentkeepAll_50 = "         %this.inputY = mCeil(%this.inputY);";
      segmentkeepAll_51 = "         //error(\"Force_Digital_Input => \", %this.inputY);";
      segmentkeepAll_52 = "      }";
      segmentkeepAll_53 = "   }";
      segmentkeepAll_54 = "   // Down";
      segmentkeepAll_55 = "   else if (%val > 0)";
      segmentkeepAll_56 = "   {";
      segmentkeepAll_57 = "      if(%this.Enable_Down)";
      segmentkeepAll_58 = "      {";
      segmentkeepAll_59 = "         %this.inputY = -%val;";
      segmentkeepAll_6 = "   ";
      segmentkeepAll_60 = "      }";
      segmentkeepAll_61 = "      else";
      segmentkeepAll_62 = "      {";
      segmentkeepAll_63 = "         %this.inputY = 0;";
      segmentkeepAll_64 = "      }";
      segmentkeepAll_65 = "      if(%this.Force_Digital_Input)";
      segmentkeepAll_66 = "      {";
      segmentkeepAll_67 = "         %this.inputY = mFloor(%this.inputY);";
      segmentkeepAll_68 = "         //error(\"Force_Digital_Input => \", %this.inputY);";
      segmentkeepAll_69 = "      }";
      segmentkeepAll_7 = "   if(%this.Opposites_Cancel && %this.up && %this.down)";
      segmentkeepAll_70 = "   }";
      segmentkeepAll_71 = "   // Off";
      segmentkeepAll_72 = "   else";
      segmentkeepAll_73 = "   {";
      segmentkeepAll_74 = "      %this.inputY = 0;";
      segmentkeepAll_75 = "   }";
      segmentkeepAll_76 = "   %this.doMove();";
      segmentkeepAll_77 = "}";
      segmentkeepAll_78 = "function moveConstantForce_m::onMoveLeft( %this , %val )";
      segmentkeepAll_79 = "{   ";
      segmentkeepAll_8 = "   {";
      segmentkeepAll_80 = "   //error(\"moveConstantForce_m::onMoveLeft( \", %val , \" ) \" );";
      segmentkeepAll_81 = "   %this.left = %val;";
      segmentkeepAll_82 = "   if(!%val && %this.right) ";
      segmentkeepAll_83 = "   {";
      segmentkeepAll_84 = "      %val = 1;";
      segmentkeepAll_85 = "   }";
      segmentkeepAll_86 = "   else";
      segmentkeepAll_87 = "   {";
      segmentkeepAll_88 = "      %val = -%val; // Flip to get proper direction";
      segmentkeepAll_89 = "   }";
      segmentkeepAll_9 = "      %this.inputY = 0;";
      segmentkeepAll_90 = "   %this.inputX  = %val;";
      segmentkeepAll_91 = "   if(%this.Opposites_Cancel && %this.left && %this.right)";
      segmentkeepAll_92 = "   {";
      segmentkeepAll_93 = "      %this.inputX = 0;";
      segmentkeepAll_94 = "   }";
      segmentkeepAll_95 = "   %this.doMove();";
      segmentkeepAll_96 = "}";
      segmentkeepAll_97 = "function moveConstantForce_m::onMoveRight( %this , %val )";
      segmentkeepAll_98 = "{   ";
      segmentkeepAll_99 = "   //error(\"moveConstantForce_m::onMoveRight( \", %val , \" ) \" );";
      segmentonAddToScene = "35";
      segmentonAddToScene_0 = "   // Note: Do not use a joystick for only one part of a movement pair. ";
      segmentonAddToScene_1 = "   // Ex: If you use joystick yaxis for up, use it for down too.";
      segmentonAddToScene_10 = "   else";
      segmentonAddToScene_11 = "   {";
      segmentonAddToScene_12 = "      // USING JOYSTICK AXIS";
      segmentonAddToScene_13 = "      moveMap.bindMulti( getWord( %this.Up , 0 ), getWord( %this.Up , 1 ), %this, \"onMoveJoystickUpDown\" );";
      segmentonAddToScene_14 = "   }";
      segmentonAddToScene_15 = "   if( strstr( getWord( %this.Left , 1 ), \"axis\" ) == -1 )";
      segmentonAddToScene_16 = "   {";
      segmentonAddToScene_17 = "      // USING JOYSTICK BUTTONS OR KEYBOARD KEYS";
      segmentonAddToScene_18 = "   if(%this.Enable_Left)";
      segmentonAddToScene_19 = "      moveMap.bindMulti( getWord( %this.Left , 0 ),  getWord( %this.Left , 1 ),  %this, \"onMoveLeft\" );";
      segmentonAddToScene_2 = "   if( strstr( getWord( %this.Up , 1 ), \"axis\" ) == -1 )";
      segmentonAddToScene_20 = "   if(%this.Enable_Right)";
      segmentonAddToScene_21 = "      moveMap.bindMulti( getWord( %this.Right , 0 ), getWord( %this.Right , 1 ), %this, \"onMoveRight\" );";
      segmentonAddToScene_22 = "   }";
      segmentonAddToScene_23 = "   else";
      segmentonAddToScene_24 = "   {";
      segmentonAddToScene_25 = "      // USING JOYSTICK AXIS";
      segmentonAddToScene_26 = "      moveMap.bindMulti( getWord( %this.Left , 0 ), getWord( %this.Left , 1 ), %this, \"onMoveJoystickLeftRight\" );";
      segmentonAddToScene_27 = "   }";
      segmentonAddToScene_28 = "      ";
      segmentonAddToScene_29 = "   %this.inputX = 0;";
      segmentonAddToScene_3 = "   {";
      segmentonAddToScene_30 = "   %this.inputY = 0;";
      segmentonAddToScene_31 = "   %this.up     = 0;";
      segmentonAddToScene_32 = "   %this.down   = 0;";
      segmentonAddToScene_33 = "   %this.left   = 0;";
      segmentonAddToScene_34 = "   %this.right  = 0;";
      segmentonAddToScene_4 = "      // USING JOYSTICK BUTTONS OR KEYBOARD KEYS";
      segmentonAddToScene_5 = "      if(%this.Enable_Up)";
      segmentonAddToScene_6 = "         moveMap.bindMulti( getWord( %this.Up , 0 ),    getWord( %this.Up , 1 ),    %this, \"onMoveUp\" );";
      segmentonAddToScene_7 = "      if(%this.Enable_Down)";
      segmentonAddToScene_8 = "         moveMap.bindMulti( getWord( %this.Down , 0 ),  getWord( %this.Down , 1 ),  %this, \"onMoveDown\" );";
      segmentonAddToScene_9 = "   }";
      segments = "behaviorFields\tonAddToScene\tkeepAll";
};
//--- OBJECT WRITE END ---
//--- OBJECT WRITE BEGIN ---
new ScriptObject(full_01MovementInput_Generic_moveByStep_m) {
   canSaveDynamicFields = "1";
   class = "behaviorAtom";
      behaviorType = "01 - Generic Movements (Key/Joy/Con; Multibind)";
      description = "Move up/down/left/right by specified steps.";
      details_atomName = "moveByStep_m";
      details_category = "01 - Movement (Input)";
      details_eventAction = "full";
      details_subCategory = "Generic";
      friendlyName = "By Step (multi)";
      segmentbehaviorFields = "13";
      segmentbehaviorFields_0 = "   %behavior.addBehaviorField(upKey, \"Key to bind to upward movement\", keybind, \"Keyboard W\");";
      segmentbehaviorFields_1 = "   %behavior.addBehaviorField(downKey, \"Key to bind to downward movement\", keybind, \"Keyboard S\");";
      segmentbehaviorFields_10 = "   %behavior.addBehaviorField(enableLeft, \"Allow leftward movement\", bool, true);";
      segmentbehaviorFields_11 = "   %behavior.addBehaviorField(enableRight, \"Allow rightward movement\", bool, true);";
      segmentbehaviorFields_12 = "   %behavior.addBehaviorField(repeatRate, \"While button(s) held repeat at this many moves per-second. (Maximum: 100)\", integer, 0);";
      segmentbehaviorFields_2 = "   %behavior.addBehaviorField(leftKey, \"Key to bind to leftward movement\", keybind, \"Keyboard A\");";
      segmentbehaviorFields_3 = "   %behavior.addBehaviorField(rightKey, \"Key to bind to rightward movement\", keybind, \"Keyboard D\");";
      segmentbehaviorFields_4 = "   %behavior.addBehaviorField(upStep, \"Number of world units to move up (per key press)\", float, 5.0);";
      segmentbehaviorFields_5 = "   %behavior.addBehaviorField(downStep, \"Number of world units to move down (per key press)\", float, 5.0);";
      segmentbehaviorFields_6 = "   %behavior.addBehaviorField(leftStep, \"Number of world units to move left (per key press)\", float, 5.0);";
      segmentbehaviorFields_7 = "   %behavior.addBehaviorField(rightStep, \"Number of world units to move right (per key press)\", float, 5.0);";
      segmentbehaviorFields_8 = "   %behavior.addBehaviorField(enableUp, \"Allow upward movement\", bool, true);";
      segmentbehaviorFields_9 = "   %behavior.addBehaviorField(enableDown, \"Allow downward movement\", bool, true);";
      segmentkeepAll = "88";
      segmentkeepAll_0 = "function moveByStep_m::moveUp(%this, %val)";
      segmentkeepAll_1 = "{";
      segmentkeepAll_10 = "      return;";
      segmentkeepAll_11 = "   }";
      segmentkeepAll_12 = "   %oldPos = %this.owner.getPosition();";
      segmentkeepAll_13 = "   %newPos = t2dVectorAdd( %oldPos, 0 SPC -%this.upStep );";
      segmentkeepAll_14 = "   %this.owner.setPosition(%newPos);";
      segmentkeepAll_15 = "   if( %this.repeatRate > 0) ";
      segmentkeepAll_16 = "   {";
      segmentkeepAll_17 = "      %rate = 1000 / %this.repeatRate;";
      segmentkeepAll_18 = "      if(%rate < 10) %rate = 10;";
      segmentkeepAll_19 = "      %this.lastUpSchedule = %this.schedule(%rate, doMoveUp);";
      segmentkeepAll_2 = "   %this.up = %val;";
      segmentkeepAll_20 = "   }";
      segmentkeepAll_21 = "}";
      segmentkeepAll_22 = "function moveByStep_m::moveDown(%this, %val)";
      segmentkeepAll_23 = "{";
      segmentkeepAll_24 = "   %this.Down = %val;";
      segmentkeepAll_25 = "   %this.doMoveDown();";
      segmentkeepAll_26 = "}";
      segmentkeepAll_27 = "function moveByStep_m::doMoveDown(%this)";
      segmentkeepAll_28 = "{";
      segmentkeepAll_29 = "   if(%this.Down == 0) ";
      segmentkeepAll_3 = "   %this.doMoveUp();";
      segmentkeepAll_30 = "   {";
      segmentkeepAll_31 = "      cancel(%this.lastDownSchedule);";
      segmentkeepAll_32 = "      return;";
      segmentkeepAll_33 = "   }";
      segmentkeepAll_34 = "   %oldPos = %this.owner.getPosition();";
      segmentkeepAll_35 = "   %newPos = t2dVectorAdd( %oldPos, 0 SPC %this.downStep );";
      segmentkeepAll_36 = "   %this.owner.setPosition(%newPos);";
      segmentkeepAll_37 = "   if( %this.repeatRate > 0) ";
      segmentkeepAll_38 = "   {";
      segmentkeepAll_39 = "      %rate = 1000 / %this.repeatRate;";
      segmentkeepAll_4 = "}";
      segmentkeepAll_40 = "      if(%rate < 10) %rate = 10;";
      segmentkeepAll_41 = "      %this.lastDownSchedule = %this.schedule(%rate, doMoveDown);";
      segmentkeepAll_42 = "   }";
      segmentkeepAll_43 = "}";
      segmentkeepAll_44 = "function moveByStep_m::moveLeft(%this, %val)";
      segmentkeepAll_45 = "{";
      segmentkeepAll_46 = "   %this.Left = %val;";
      segmentkeepAll_47 = "   %this.doMoveLeft();";
      segmentkeepAll_48 = "}";
      segmentkeepAll_49 = "function moveByStep_m::doMoveLeft(%this)";
      segmentkeepAll_5 = "function moveByStep_m::doMoveUp(%this)";
      segmentkeepAll_50 = "{";
      segmentkeepAll_51 = "   if(%this.Left == 0) ";
      segmentkeepAll_52 = "   {";
      segmentkeepAll_53 = "      cancel(%this.lastLeftSchedule);";
      segmentkeepAll_54 = "      return;";
      segmentkeepAll_55 = "   }";
      segmentkeepAll_56 = "   %oldPos = %this.owner.getPosition();";
      segmentkeepAll_57 = "   %newPos = t2dVectorAdd( %oldPos, -%this.leftStep SPC 0 );";
      segmentkeepAll_58 = "   %this.owner.setPosition(%newPos);";
      segmentkeepAll_59 = "   if( %this.repeatRate > 0) ";
      segmentkeepAll_6 = "{";
      segmentkeepAll_60 = "   {";
      segmentkeepAll_61 = "      %rate = 1000 / %this.repeatRate;";
      segmentkeepAll_62 = "      if(%rate < 10) %rate = 10;";
      segmentkeepAll_63 = "      %this.lastLeftSchedule = %this.schedule(%rate, doMoveLeft);";
      segmentkeepAll_64 = "   }";
      segmentkeepAll_65 = "}";
      segmentkeepAll_66 = "function moveByStep_m::moveRight(%this, %val)";
      segmentkeepAll_67 = "{";
      segmentkeepAll_68 = "   %this.Right = %val;";
      segmentkeepAll_69 = "   %this.doMoveRight();";
      segmentkeepAll_7 = "   if(%this.up == 0) ";
      segmentkeepAll_70 = "}";
      segmentkeepAll_71 = "function moveByStep_m::doMoveRight(%this)";
      segmentkeepAll_72 = "{";
      segmentkeepAll_73 = "   if(%this.Right == 0) ";
      segmentkeepAll_74 = "   {";
      segmentkeepAll_75 = "      cancel(%this.lastRightSchedule);";
      segmentkeepAll_76 = "      return;";
      segmentkeepAll_77 = "   }";
      segmentkeepAll_78 = "   %oldPos = %this.owner.getPosition();";
      segmentkeepAll_79 = "   %newPos = t2dVectorAdd( %oldPos, %this.rightStep SPC 0 );";
      segmentkeepAll_8 = "   {";
      segmentkeepAll_80 = "   %this.owner.setPosition(%newPos);";
      segmentkeepAll_81 = "   if( %this.repeatRate > 0) ";
      segmentkeepAll_82 = "   {";
      segmentkeepAll_83 = "      %rate = 1000 / %this.repeatRate;";
      segmentkeepAll_84 = "      if(%rate < 10) %rate = 10;";
      segmentkeepAll_85 = "      %this.lastRightSchedule = %this.schedule(%rate, doMoveRight);";
      segmentkeepAll_86 = "   }";
      segmentkeepAll_87 = "}";
      segmentkeepAll_9 = "      cancel(%this.lastUpSchedule);";
      segmentonAddToScene = "15";
      segmentonAddToScene_0 = "   if (!isObject(moveMap))";
      segmentonAddToScene_1 = "      return;";
      segmentonAddToScene_10 = "      moveMap.bindMulti(getWord(%this.rightKey, 0), getWord(%this.rightKey, 1), %this, \"moveRight\");";
      segmentonAddToScene_11 = "   %this.up     = 0;";
      segmentonAddToScene_12 = "   %this.down   = 0;";
      segmentonAddToScene_13 = "   %this.left   = 0;";
      segmentonAddToScene_14 = "   %this.right  = 0;";
      segmentonAddToScene_2 = "   ";
      segmentonAddToScene_3 = "   if(%this.enableUp) ";
      segmentonAddToScene_4 = "      moveMap.bindMulti(getWord(%this.upKey, 0), getWord(%this.upKey, 1), %this, \"moveUp\");";
      segmentonAddToScene_5 = "   if(%this.enableDown)";
      segmentonAddToScene_6 = "      moveMap.bindMulti(getWord(%this.downKey, 0), getWord(%this.downKey, 1), %this, \"moveDown\");";
      segmentonAddToScene_7 = "   if(%this.enableLeft)";
      segmentonAddToScene_8 = "      moveMap.bindMulti(getWord(%this.leftKey, 0), getWord(%this.leftKey, 1), %this, \"moveLeft\");";
      segmentonAddToScene_9 = "   if(%this.enableRight)";
      segments = "behaviorFields\tonAddToScene\tkeepAll";
};
//--- OBJECT WRITE END ---
//--- OBJECT WRITE BEGIN ---
new ScriptObject(full_01MovementInput_Generic_moveBySize_m) {
   canSaveDynamicFields = "1";
   class = "behaviorAtom";
      behaviorType = "01 - Generic Movements (Key/Joy/Con; Multibind)";
      description = "Move up/down/left/right by specified multiple of height/width.";
      details_atomName = "moveBySize_m";
      details_category = "01 - Movement (Input)";
      details_eventAction = "full";
      details_subCategory = "Generic";
      friendlyName = "By Size (multi)";
      segmentbehaviorFields = "13";
      segmentbehaviorFields_0 = "   %behavior.addBehaviorField(upKey, \"Key to bind to upward movement\", keybind, \"Keyboard W\");";
      segmentbehaviorFields_1 = "   %behavior.addBehaviorField(downKey, \"Key to bind to downward movement\", keybind, \"Keyboard S\");";
      segmentbehaviorFields_10 = "   %behavior.addBehaviorField(enableLeft, \"Allow leftward movement\", bool, true);";
      segmentbehaviorFields_11 = "   %behavior.addBehaviorField(enableRight, \"Allow rightward movement\", bool, true);";
      segmentbehaviorFields_12 = "   %behavior.addBehaviorField(repeatRate, \"While button(s) held repeat at this many moves per-second. (Maximum: 100)\", integer, 0);";
      segmentbehaviorFields_2 = "   %behavior.addBehaviorField(leftKey, \"Key to bind to leftward movement\", keybind, \"Keyboard A\");";
      segmentbehaviorFields_3 = "   %behavior.addBehaviorField(rightKey, \"Key to bind to rightward movement\", keybind, \"Keyboard D\");";
      segmentbehaviorFields_4 = "   %behavior.addBehaviorField(upScale, \"Number of multiples of height to move up (per key press)\", float, 1.0);";
      segmentbehaviorFields_5 = "   %behavior.addBehaviorField(downScale, \"Number of multiples of height to move down (per key press)\", float, 1.0);";
      segmentbehaviorFields_6 = "   %behavior.addBehaviorField(leftScale, \"Number of multiples of width to move left (per key press)\", float, 1.0);";
      segmentbehaviorFields_7 = "   %behavior.addBehaviorField(rightScale, \"Number of multiples of width to move right (per key press)\", float, 1.0);";
      segmentbehaviorFields_8 = "   %behavior.addBehaviorField(enableUp, \"Allow upward movement\", bool, true);";
      segmentbehaviorFields_9 = "   %behavior.addBehaviorField(enableDown, \"Allow downward movement\", bool, true);";
      segmentkeepAll = "92";
      segmentkeepAll_0 = "function moveBySize_m::moveUp(%this, %val)";
      segmentkeepAll_1 = "{";
      segmentkeepAll_10 = "      return;";
      segmentkeepAll_11 = "   }";
      segmentkeepAll_12 = "   %oldPos = %this.owner.getPosition();";
      segmentkeepAll_13 = "   %height = %this.owner.getHeight();     ";
      segmentkeepAll_14 = "   %newPos = t2dVectorAdd( %oldPos, 0 SPC -(%this.upScale * %height));";
      segmentkeepAll_15 = "   %this.owner.setPosition(%newPos);";
      segmentkeepAll_16 = "   if( %this.repeatRate > 0) ";
      segmentkeepAll_17 = "   {";
      segmentkeepAll_18 = "      %rate = 1000 / %this.repeatRate;";
      segmentkeepAll_19 = "      if(%rate < 10) %rate = 10;";
      segmentkeepAll_2 = "   %this.up = %val;";
      segmentkeepAll_20 = "      %this.lastUpSchedule = %this.schedule(%rate, doMoveUp);";
      segmentkeepAll_21 = "   }";
      segmentkeepAll_22 = "}";
      segmentkeepAll_23 = "function moveBySize_m::moveDown(%this, %val)";
      segmentkeepAll_24 = "{";
      segmentkeepAll_25 = "   %this.Down = %val;";
      segmentkeepAll_26 = "   %this.doMoveDown();";
      segmentkeepAll_27 = "}";
      segmentkeepAll_28 = "function moveBySize_m::doMoveDown(%this)";
      segmentkeepAll_29 = "{";
      segmentkeepAll_3 = "   %this.doMoveUp();";
      segmentkeepAll_30 = "   if(%this.Down == 0) ";
      segmentkeepAll_31 = "   {";
      segmentkeepAll_32 = "      cancel(%this.lastDownSchedule);";
      segmentkeepAll_33 = "      return;";
      segmentkeepAll_34 = "   }";
      segmentkeepAll_35 = "   %oldPos = %this.owner.getPosition();";
      segmentkeepAll_36 = "   %height = %this.owner.getHeight();     ";
      segmentkeepAll_37 = "   %newPos = t2dVectorAdd( %oldPos, 0 SPC (%this.downScale * %height));";
      segmentkeepAll_38 = "   %this.owner.setPosition(%newPos);";
      segmentkeepAll_39 = "   if( %this.repeatRate > 0)  ";
      segmentkeepAll_4 = "}";
      segmentkeepAll_40 = "   {";
      segmentkeepAll_41 = "      %rate = 1000 / %this.repeatRate;";
      segmentkeepAll_42 = "      if(%rate < 10) %rate = 10;";
      segmentkeepAll_43 = "      %this.lastDownSchedule = %this.schedule(%rate, doMoveDown);";
      segmentkeepAll_44 = "   }";
      segmentkeepAll_45 = "}";
      segmentkeepAll_46 = "function moveBySize_m::moveLeft(%this, %val)";
      segmentkeepAll_47 = "{";
      segmentkeepAll_48 = "   %this.Left = %val;";
      segmentkeepAll_49 = "   %this.doMoveLeft();";
      segmentkeepAll_5 = "function moveBySize_m::doMoveUp(%this)";
      segmentkeepAll_50 = "}";
      segmentkeepAll_51 = "function moveBySize_m::doMoveLeft(%this)";
      segmentkeepAll_52 = "{";
      segmentkeepAll_53 = "   if(%this.Left == 0) ";
      segmentkeepAll_54 = "   {";
      segmentkeepAll_55 = "      cancel(%this.lastLeftSchedule);";
      segmentkeepAll_56 = "      return;";
      segmentkeepAll_57 = "   }";
      segmentkeepAll_58 = "   %oldPos = %this.owner.getPosition();";
      segmentkeepAll_59 = "   %width = %this.owner.getWidth();     ";
      segmentkeepAll_6 = "{";
      segmentkeepAll_60 = "   %newPos = t2dVectorAdd( %oldPos, -(%this.leftScale * %width) SPC 0);";
      segmentkeepAll_61 = "   %this.owner.setPosition(%newPos);";
      segmentkeepAll_62 = "   if( %this.repeatRate > 0)  ";
      segmentkeepAll_63 = "   {";
      segmentkeepAll_64 = "      %rate = 1000 / %this.repeatRate;";
      segmentkeepAll_65 = "      if(%rate < 10) %rate = 10;";
      segmentkeepAll_66 = "      %this.lastLeftSchedule = %this.schedule(%rate, doMoveLeft);";
      segmentkeepAll_67 = "   }";
      segmentkeepAll_68 = "}";
      segmentkeepAll_69 = "function moveBySize_m::moveRight(%this, %val)";
      segmentkeepAll_7 = "   if(%this.up == 0) ";
      segmentkeepAll_70 = "{";
      segmentkeepAll_71 = "   %this.Right = %val;";
      segmentkeepAll_72 = "   %this.doMoveRight();";
      segmentkeepAll_73 = "}";
      segmentkeepAll_74 = "function moveBySize_m::doMoveRight(%this)";
      segmentkeepAll_75 = "{";
      segmentkeepAll_76 = "   if(%this.Right == 0) ";
      segmentkeepAll_77 = "   {";
      segmentkeepAll_78 = "      cancel(%this.lastRightSchedule);";
      segmentkeepAll_79 = "      return;";
      segmentkeepAll_8 = "   {";
      segmentkeepAll_80 = "   }";
      segmentkeepAll_81 = "   %oldPos = %this.owner.getPosition();";
      segmentkeepAll_82 = "   %width = %this.owner.getWidth();     ";
      segmentkeepAll_83 = "   %newPos = t2dVectorAdd( %oldPos, (%this.rightScale * %width) SPC 0);";
      segmentkeepAll_84 = "   %this.owner.setPosition(%newPos);";
      segmentkeepAll_85 = "   if( %this.repeatRate > 0)  ";
      segmentkeepAll_86 = "   {";
      segmentkeepAll_87 = "      %rate = 1000 / %this.repeatRate;";
      segmentkeepAll_88 = "      if(%rate < 10) %rate = 10;";
      segmentkeepAll_89 = "      %this.lastRightSchedule = %this.schedule(%rate, doMoveRight);";
      segmentkeepAll_9 = "      cancel(%this.lastUpSchedule);";
      segmentkeepAll_90 = "   }";
      segmentkeepAll_91 = "}";
      segmentonAddToScene = "15";
      segmentonAddToScene_0 = "   if (!isObject(moveMap))";
      segmentonAddToScene_1 = "      return;";
      segmentonAddToScene_10 = "      moveMap.bindMulti(getWord(%this.rightKey, 0), getWord(%this.rightKey, 1), %this, \"moveRight\");";
      segmentonAddToScene_11 = "   %this.up     = 0;";
      segmentonAddToScene_12 = "   %this.down   = 0;";
      segmentonAddToScene_13 = "   %this.left   = 0;";
      segmentonAddToScene_14 = "   %this.right  = 0;";
      segmentonAddToScene_2 = "   ";
      segmentonAddToScene_3 = "   if(%this.enableUp) ";
      segmentonAddToScene_4 = "      moveMap.bindMulti(getWord(%this.upKey, 0), getWord(%this.upKey, 1), %this, \"moveUp\");";
      segmentonAddToScene_5 = "   if(%this.enableDown)";
      segmentonAddToScene_6 = "      moveMap.bindMulti(getWord(%this.downKey, 0), getWord(%this.downKey, 1), %this, \"moveDown\");";
      segmentonAddToScene_7 = "   if(%this.enableLeft)";
      segmentonAddToScene_8 = "      moveMap.bindMulti(getWord(%this.leftKey, 0), getWord(%this.leftKey, 1), %this, \"moveLeft\");";
      segmentonAddToScene_9 = "   if(%this.enableRight)";
      segments = "behaviorFields\tonAddToScene\tkeepAll";
};
//--- OBJECT WRITE END ---
