//--- OBJECT WRITE BEGIN ---
new ScriptObject(full_10Weapons_AIFiring_onAcquireTarget_Fire) {
   canSaveDynamicFields = "1";
   class = "behaviorAtom";
      behaviorType = "10 - Weapons";
      description = "Automatically seek targets and fire when one is found.";
      details_atomName = "onAcquireTarget_Fire";
      details_category = "10 - Weapons";
      details_eventAction = "full";
      details_subCategory = "AI Firing";
      friendlyName = "onAcquireTarget() -> Fire";
      segmentbehaviorFields = "6";
      segmentbehaviorFields_0 = "   %behavior.addBehaviorField(enable, \"Enable this behavior.\", \"bool\", true);";
      segmentbehaviorFields_1 = "   %behavior.addBehaviorField( \"seekGroups\", \"Seek objects in these groups.\", \"bitmask\", \"0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31\");   ";
      segmentbehaviorFields_2 = "   %behavior.addBehaviorField(\"seekDistance\", \"Maximum distance at which targets can be detected.\", \"float\", 100.0);   ";
      segmentbehaviorFields_3 = "   %behavior.addBehaviorField(\"seekFOV\", \"Maximum Field Of View (FOV) in which targets can be detected. [0,360]\", \"float\", 90.0);";
      segmentbehaviorFields_4 = "   %behavior.addBehaviorField(\"seekPeriod\", \"Time (in milliseconds) between seek scans and course adjustments. (Minimum is 10.)\", \"integer\", 100);      ";
      segmentbehaviorFields_5 = "   %behavior.addBehaviorField(\"continuousSeek\", \"If true, this object must re-acquire its target every seek cycle.\", \"bool\", true);   ";
      segmentkeepAll = "79";
      segmentkeepAll_0 = "function onAcquireTarget_Fire::seek(%this) ";
      segmentkeepAll_1 = "{";
      segmentkeepAll_10 = "   }";
      segmentkeepAll_11 = "   ////";
      segmentkeepAll_12 = "   //   1. If we have no target, try to find one.";
      segmentkeepAll_13 = "   ////";
      segmentkeepAll_14 = "   if( !isObject( %this.target )  )";
      segmentkeepAll_15 = "   {";
      segmentkeepAll_16 = "      %this.hadTarget = false;";
      segmentkeepAll_17 = "      %targets = %this.owner.getScenegraph().pickradius( %myPos, %this.seekDistance, %this.seekGroupsMask );";
      segmentkeepAll_18 = "      ";
      segmentkeepAll_19 = "      //EFM - Should not need following code but something is wrong with last two args of pickRadius() in TB 1.7.4";
      segmentkeepAll_2 = "   //echo(\"onAcquireTarget_Fire::seek( \", ((%this.getName() $= \"\") ? %this : %this.getName()) , \" ) @ \", getSimTime() );";
      segmentkeepAll_20 = "      %targets = strreplace( %targets, %this.owner.getID(), \"\" );";
      segmentkeepAll_21 = "      %targets = strreplace( %targets, \"  \", \" \" );";
      segmentkeepAll_22 = "      %targets = trim( %targets );";
      segmentkeepAll_23 = "    ";
      segmentkeepAll_24 = "      ////";
      segmentkeepAll_25 = "      //   2. Remove any \'found\' targets if they are outside of our field of vie";
      segmentkeepAll_26 = "      ////   ";
      segmentkeepAll_27 = "      %targetCount = getWordCount( %targets );";
      segmentkeepAll_28 = "      ";
      segmentkeepAll_29 = "      for(%count=0; %count < %targetCount; %count++)";
      segmentkeepAll_3 = "   if(!%this.enable) return;";
      segmentkeepAll_30 = "      {";
      segmentkeepAll_31 = "         %word = getWord( %targets, %count );";
      segmentkeepAll_32 = "         ";
      segmentkeepAll_33 = "         if(%this.targetinFOV( %word ))";
      segmentkeepAll_34 = "         {";
      segmentkeepAll_35 = "            %tmpTargets = %tmpTargets SPC %word;";
      segmentkeepAll_36 = "         }";
      segmentkeepAll_37 = "      }";
      segmentkeepAll_38 = "      ";
      segmentkeepAll_39 = "      %targets = trim( %tmptargets );";
      segmentkeepAll_4 = "   ";
      segmentkeepAll_40 = "      ";
      segmentkeepAll_41 = "      // Now randomly select a target if any are left      ";
      segmentkeepAll_42 = "      %targets = randomizeWords( %targets );";
      segmentkeepAll_43 = "      %this.target = getWord( %targets, 0 );";
      segmentkeepAll_44 = "   }";
      segmentkeepAll_45 = "      ";
      segmentkeepAll_46 = "   ////";
      segmentkeepAll_47 = "   //   2. Assuming we have a target, aim at it.   ";
      segmentkeepAll_48 = "   ////";
      segmentkeepAll_49 = "   if( isObject( %this.target ) )";
      segmentkeepAll_5 = "   %myPos = %this.owner.getPosition();";
      segmentkeepAll_50 = "   {";
      segmentkeepAll_51 = "      %this.hadTarget = true;";
      segmentkeepAll_52 = "      %targetPos     = %this.target.getPosition();     ";
      segmentkeepAll_53 = "      %targetVec     = t2dVectorSub( %targetPos , %myPos );";
      segmentkeepAll_54 = "      %targetAngle   = vectorToAngle( %targetVec );";
      segmentkeepAll_55 = "      %this.broadcastMethod( onFire, 1 );";
      segmentkeepAll_56 = "      %this.schedule(0,broadcastMethod, onFire, 0 );";
      segmentkeepAll_57 = "   }   ";
      segmentkeepAll_58 = "   ";
      segmentkeepAll_59 = "   ";
      segmentkeepAll_6 = "   ";
      segmentkeepAll_60 = "   %this.schedule( %this.seekPeriod, seek  );";
      segmentkeepAll_61 = "}";
      segmentkeepAll_62 = "function onAcquireTarget_Fire::targetinFOV( %this , %target ) ";
      segmentkeepAll_63 = "{";
      segmentkeepAll_64 = "   %owner         = %this.owner;";
      segmentkeepAll_65 = "   %myPos         = %owner.getPosition();";
      segmentkeepAll_66 = "   %targetPos     = %target.getPosition();     ";
      segmentkeepAll_67 = "   %targetVec     = t2dVectorSub( %targetPos , %myPos );";
      segmentkeepAll_68 = "   %myRotVec      = angleToVector( %owner.getRotation() );";
      segmentkeepAll_69 = "   %angleBetween  = t2dAngleBetween( %targetVec , %myRotVec );";
      segmentkeepAll_7 = "   if( %this.hadTarget && (%this.continuousSeek || !isObject( %this.target ) ) )";
      segmentkeepAll_70 = "         ";
      segmentkeepAll_71 = "   //error(\"         targetID  \" , %target );";
      segmentkeepAll_72 = "   //error(\" to target vector  \" , %targetVec );";
      segmentkeepAll_73 = "   //error(\" to target dot  \" , t2dVectorDot( %targetVec, %myRotVec ) );   ";
      segmentkeepAll_74 = "   //error(\"     my rot vector \" , %myRotVec );";
      segmentkeepAll_75 = "   //error(\"     angle between \" , %angleBetween );";
      segmentkeepAll_76 = "   //error(\"%this.maxSeekAngle \" , %this.maxSeekAngle );";
      segmentkeepAll_77 = "   return( %angleBetween <= %this.maxSeekAngle );";
      segmentkeepAll_78 = "}";
      segmentkeepAll_8 = "   {";
      segmentkeepAll_9 = "      %this.target = 0;";
      segmentonAddToScene = "11";
      segmentonAddToScene_0 = "   %this.hadTarget = false;";
      segmentonAddToScene_1 = "   if(%this.seekPeriod < 10 ) %this.seekPeriod = 10;   ";
      segmentonAddToScene_10 = "   %this.seek( );";
      segmentonAddToScene_2 = "   ";
      segmentonAddToScene_3 = "   if(%this.seekFOV > 360) %this.seekFOV = 360;";
      segmentonAddToScene_4 = "   if(%this.seekFOV < 0) %this.seekFOV = 0;   ";
      segmentonAddToScene_5 = "   ";
      segmentonAddToScene_6 = "   %this.maxSeekAngle = %this.seekFOV / 2;";
      segmentonAddToScene_7 = "      ";
      segmentonAddToScene_8 = "   %this.seekGroupsMask = bits(%this.seekGroups);";
      segmentonAddToScene_9 = "   ";
      segments = "behaviorFields\tonAddToScene\tkeepAll";
};
//--- OBJECT WRITE END ---
